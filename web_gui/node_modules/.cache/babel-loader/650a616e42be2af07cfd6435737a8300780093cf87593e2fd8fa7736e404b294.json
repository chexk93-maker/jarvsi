{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krish\\\\jarvis\\\\web_gui\\\\src\\\\components\\\\JarvisInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo, memo } from 'react';\nimport GlassyBlob from './GlassyBlob';\nimport { useAudioAnalyzer } from './AudioAnalyzer';\nimport ChatPanel from './ChatPanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemoizedGlassyBlob = /*#__PURE__*/memo(GlassyBlob);\n_c = MemoizedGlassyBlob;\nconst MemoizedChatPanel = /*#__PURE__*/memo(ChatPanel);\n_c2 = MemoizedChatPanel;\nconst JarvisInterface = () => {\n  _s();\n  const [mode, setMode] = useState('idle');\n  const [intensity, setIntensity] = useState(0.5);\n  const [userText, setUserText] = useState('');\n  const [assistantText, setAssistantText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [micEnabled, setMicEnabled] = useState(true);\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\n  const wsRef = useRef(null);\n  const responseRef = useRef('');\n  const lastTextInputRef = useRef(null);\n\n  // Helper function to safely send WebSocket messages\n  const sendWebSocketMessage = useCallback(message => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(message));\n      return true;\n    }\n    console.warn('WebSocket not ready. Message not sent:', message);\n    return false;\n  }, []);\n\n  // Audio analyzer for real-time audio level monitoring\n  const {\n    startListening,\n    stopListening,\n    isListening,\n    audioLevel\n  } = useAudioAnalyzer(level => {\n    if (mode === 'listening' || mode === 'idle') {\n      setIntensity(prevIntensity => {\n        const newIntensity = Math.max(0.1, level * 1.5);\n        // Only update if the change is significant\n        if (Math.abs(newIntensity - prevIntensity) > 0.01) {\n          return newIntensity;\n        }\n        return prevIntensity;\n      });\n    }\n  });\n  const addToConversation = useCallback((role, text) => {\n    const messageId = `${role}-${text}-${Date.now()}`;\n    lastTextInputRef.current = {\n      text,\n      timestamp: Date.now()\n    };\n    setConversationHistory(prev => [...prev, {\n      role,\n      text,\n      timestamp: new Date().toLocaleTimeString(),\n      id: messageId\n    }]);\n  }, []);\n  const handleJarvisMessage = useCallback(data => {\n    switch (data.type) {\n      case 'user_text':\n        if (lastTextInputRef.current && lastTextInputRef.current.text === data.text && Date.now() - lastTextInputRef.current.timestamp < 2000) {\n          // Duplicate, do nothing\n        } else {\n          addToConversation('user', data.text);\n        }\n        setIsWaitingForResponse(true);\n        break;\n      case 'assistant_stream':\n        setIsWaitingForResponse(false);\n        responseRef.current += data.text;\n        setCurrentResponse(responseRef.current);\n        break;\n      case 'assistant_final':\n        setAssistantText(data.text);\n        addToConversation('assistant', data.text);\n        responseRef.current = '';\n        setCurrentResponse('');\n        setIsWaitingForResponse(false);\n        setMode('idle');\n        setIntensity(0.5);\n        break;\n      case 'mode_change':\n        setMode(data.mode);\n        if (data.mode === 'listening') {\n          setIntensity(0.3);\n          if (micEnabled) startListening();\n        } else if (data.mode === 'speaking') {\n          setIntensity(data.intensity || 0.8);\n          stopListening();\n        } else if (data.mode === 'idle') {\n          setIntensity(0.5);\n          if (micEnabled) startListening();\n        } else {\n          setIntensity(0.5);\n          stopListening();\n        }\n        break;\n      case 'audio_level':\n        if (data.mode === 'speaking') {\n          setIntensity(Math.max(0.3, data.level * 1.2));\n        }\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  }, [addToConversation, micEnabled, startListening, stopListening]);\n  const connectToJarvis = useCallback(() => {\n    try {\n      wsRef.current = new WebSocket('ws://localhost:8765');\n      wsRef.current.onopen = () => {\n        console.log('Connected to Jarvis backend');\n        setIsConnected(true);\n        // Use the helper function to send message\n        sendWebSocketMessage({\n          type: 'enable_mic'\n        });\n      };\n      wsRef.current.onmessage = event => handleJarvisMessage(JSON.parse(event.data));\n      wsRef.current.onclose = () => {\n        console.log('Disconnected from Jarvis backend');\n        setIsConnected(false);\n        setTimeout(connectToJarvis, 3000);\n      };\n      wsRef.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Failed to connect to Jarvis:', error);\n      setIsConnected(false);\n    }\n  }, [handleJarvisMessage, sendWebSocketMessage]);\n  useEffect(() => {\n    connectToJarvis();\n    return () => {\n      if (wsRef.current) wsRef.current.close();\n      stopListening();\n    };\n  }, [connectToJarvis, stopListening]);\n  const sendTextMessage = useCallback(() => {\n    if (userText.trim() && isConnected) {\n      const message = userText.trim();\n      addToConversation('user', message);\n      setIsWaitingForResponse(true);\n      // Use the helper function to send message\n      sendWebSocketMessage({\n        type: 'text_input',\n        text: message\n      });\n      setUserText('');\n    }\n  }, [userText, isConnected, addToConversation, sendWebSocketMessage]);\n  const toggleMicrophone = useCallback(async () => {\n    if (!micEnabled) {\n      try {\n        await startListening();\n        setMicEnabled(true);\n        // Use the helper function to send message\n        sendWebSocketMessage({\n          type: 'enable_mic'\n        });\n      } catch (error) {\n        console.error('Failed to enable microphone:', error);\n      }\n    } else {\n      stopListening();\n      setMicEnabled(false);\n      // Use the helper function to send message\n      sendWebSocketMessage({\n        type: 'disable_mic'\n      });\n    }\n  }, [micEnabled, startListening, stopListening, sendWebSocketMessage]);\n  const clearConversation = useCallback(() => {\n    setConversationHistory([]);\n    setCurrentResponse('');\n    responseRef.current = '';\n  }, []);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const containerStyle = useMemo(() => ({\n    minHeight: '100vh',\n    background: 'linear-gradient(135deg, #000000 0%, #0a0a0a 100%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Inter, system-ui, sans-serif',\n    position: 'relative',\n    overflow: 'hidden'\n  }), []);\n  const connectionStatusStyle = useMemo(() => ({\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: isConnected ? '#00ff88' : '#ff4757',\n    fontSize: '12px',\n    fontWeight: '500',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '8px',\n    padding: '8px 12px',\n    background: 'rgba(0, 0, 0, 0.3)',\n    borderRadius: '20px',\n    backdropFilter: 'blur(10px)'\n  }), [isConnected]);\n  const connectionIndicatorStyle = useMemo(() => ({\n    width: '8px',\n    height: '8px',\n    borderRadius: '50%',\n    background: isConnected ? '#00ff88' : '#ff4757',\n    boxShadow: `0 0 10px ${isConnected ? '#00ff88' : '#ff4757'}`\n  }), [isConnected]);\n  const chatButtonStyle = useMemo(() => ({\n    position: 'fixed',\n    bottom: '40px',\n    right: '40px',\n    width: '50px',\n    height: '50px',\n    borderRadius: '50%',\n    background: 'rgba(64, 158, 255, 0.2)',\n    border: '1px solid rgba(64, 158, 255, 0.4)',\n    cursor: 'pointer',\n    display: isChatOpen ? 'none' : 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    zIndex: 1000,\n    boxShadow: '0 0 20px rgba(64, 158, 255, 0.3)'\n  }), [isChatOpen]);\n  const micButtonStyle = useMemo(() => ({\n    position: 'fixed',\n    bottom: '35px',\n    left: 'calc(50vw - 30px)',\n    width: '60px',\n    height: '60px',\n    borderRadius: '50%',\n    background: micEnabled ? 'linear-gradient(135deg, #00ff88, #00d4aa)' : 'rgba(36, 58, 82, 0.8)',\n    border: micEnabled ? '2px solid rgba(0, 255, 136, 0.4)' : '2px solid rgba(255, 255, 255, 0.2)',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    boxShadow: micEnabled ? '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)' : '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)',\n    zIndex: 1000\n  }), [micEnabled]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: connectionStatusStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: connectionIndicatorStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), isConnected ? 'Connected' : 'Disconnected']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsChatOpen(!isChatOpen),\n      title: \"Toggle Chat Panel\",\n      style: chatButtonStyle,\n      onMouseOver: e => {\n        const button = e.currentTarget;\n        button.style.transform = 'scale(1.1)';\n        button.style.background = 'rgba(64, 158, 255, 0.3)';\n        button.style.boxShadow = '0 0 30px rgba(64, 158, 255, 0.5)';\n      },\n      onMouseOut: e => {\n        const button = e.currentTarget;\n        button.style.transform = 'scale(1)';\n        button.style.background = 'rgba(64, 158, 255, 0.2)';\n        button.style.boxShadow = '0 0 20px rgba(64, 158, 255, 0.3)';\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2ZM20 16H6L4 18V4H20V16Z\",\n          fill: \"#409EFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMicrophone,\n      title: micEnabled ? \"Disable Microphone\" : \"Enable Microphone\",\n      style: micButtonStyle,\n      onMouseOver: e => {\n        const button = e.currentTarget;\n        button.style.transform = 'scale(1.1)';\n        if (micEnabled) {\n          button.style.boxShadow = '0 0 40px rgba(0, 255, 136, 0.6), 0 4px 20px rgba(0, 0, 0, 0.4)';\n        } else {\n          button.style.boxShadow = '0 0 30px rgba(36, 58, 82, 0.7), 0 4px 20px rgba(0, 0, 0, 0.4)';\n        }\n      },\n      onMouseOut: e => {\n        const button = e.currentTarget;\n        button.style.transform = 'scale(1)';\n        if (micEnabled) {\n          button.style.boxShadow = '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)';\n        } else {\n          button.style.boxShadow = '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)';\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '36px',\n          height: '36px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"32\",\n          height: \"32\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"mic-icon\",\n          children: [/*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"mic-body\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 15C13.6569 15 15 13.6569 15 12V6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6V12C9 13.6569 10.3431 15 12 15Z\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"mic-stand\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12H5C5 15.866 7.93452 19 11.5 19V22H12.5V19C16.0655 19 19 15.866 19 12H17Z\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), micEnabled && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '-6px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              width: '4px',\n              height: '4px',\n              border: '1px solid rgba(0, 255, 136, 0.6)',\n              borderRadius: '50%',\n              animation: 'soundwave 2s ease-out infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '-10px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              width: '6px',\n              height: '6px',\n              border: '1px solid rgba(0, 255, 136, 0.4)',\n              borderRadius: '50%',\n              animation: 'soundwave 2s ease-out 0.3s infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '30px',\n          filter: 'drop-shadow(0 0 50px rgba(255, 215, 0, 0.3))'\n        },\n        children: /*#__PURE__*/_jsxDEV(MemoizedGlassyBlob, {\n          mode: mode,\n          intensity: intensity,\n          size: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'rgba(255, 255, 255, 0.7)',\n          fontSize: '14px',\n          fontWeight: '400',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          letterSpacing: '2px',\n          opacity: 0.8\n        },\n        children: [mode === 'idle' && 'Ready', mode === 'listening' && `Listening ${Math.round(audioLevel * 100)}%`, mode === 'thinking' && 'Processing...', mode === 'speaking' && 'Speaking']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MemoizedChatPanel, {\n      isOpen: isChatOpen,\n      conversationHistory: conversationHistory,\n      currentResponse: currentResponse,\n      isWaitingForResponse: isWaitingForResponse,\n      onSendMessage: sendTextMessage,\n      userText: userText,\n      setUserText: setUserText,\n      isConnected: isConnected,\n      onClearHistory: clearConversation,\n      onClose: () => setIsChatOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes blink {\n            0%, 50% { opacity: 1; }\n            51%, 100% { opacity: 0; }\n          }\n          \n          @keyframes slideIn {\n            from { transform: translateX(100%); }\n            to { transform: translateX(0); }\n          }\n          \n          @keyframes slideOut {\n            from { transform: translateX(0); }\n            to { transform: translateX(100%); }\n          }\n          \n          * {\n            box-sizing: border-box;\n          }\n          \n          ::-webkit-scrollbar {\n            width: 6px;\n          }\n          \n          ::-webkit-scrollbar-track {\n            background: rgba(255, 255, 255, 0.05);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb {\n            background: rgba(255, 255, 255, 0.2);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb:hover {\n            background: rgba(255, 255, 255, 0.3);\n          }\n          \n          @keyframes pulse {\n            from { \n              opacity: 0.6;\n              transform: translateX(-50%) scaleY(0.8);\n            }\n            to { \n              opacity: 1;\n              transform: translateX(-50%) scaleY(1.2);\n            }\n          }\n          \n          @keyframes soundwave {\n            0% {\n              transform: translateY(-50%) scale(0);\n              opacity: 1;\n            }\n            50% {\n              opacity: 0.5;\n            }\n            100% {\n              transform: translateY(-50%) scale(2);\n              opacity: 0;\n            }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(JarvisInterface, \"TV8tHWFOyJB/xkwnNSOsmcTOeZ8=\", false, function () {\n  return [useAudioAnalyzer];\n});\n_c3 = JarvisInterface;\nexport default JarvisInterface;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MemoizedGlassyBlob\");\n$RefreshReg$(_c2, \"MemoizedChatPanel\");\n$RefreshReg$(_c3, \"JarvisInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","memo","GlassyBlob","useAudioAnalyzer","ChatPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","MemoizedGlassyBlob","_c","MemoizedChatPanel","_c2","JarvisInterface","_s","mode","setMode","intensity","setIntensity","userText","setUserText","assistantText","setAssistantText","isConnected","setIsConnected","conversationHistory","setConversationHistory","currentResponse","setCurrentResponse","micEnabled","setMicEnabled","isWaitingForResponse","setIsWaitingForResponse","wsRef","responseRef","lastTextInputRef","sendWebSocketMessage","message","current","readyState","WebSocket","OPEN","send","JSON","stringify","console","warn","startListening","stopListening","isListening","audioLevel","level","prevIntensity","newIntensity","Math","max","abs","addToConversation","role","text","messageId","Date","now","timestamp","prev","toLocaleTimeString","id","handleJarvisMessage","data","type","log","connectToJarvis","onopen","onmessage","event","parse","onclose","setTimeout","onerror","error","close","sendTextMessage","trim","toggleMicrophone","clearConversation","isChatOpen","setIsChatOpen","containerStyle","minHeight","background","display","alignItems","justifyContent","fontFamily","position","overflow","connectionStatusStyle","top","left","color","fontSize","fontWeight","gap","padding","borderRadius","backdropFilter","connectionIndicatorStyle","width","height","boxShadow","chatButtonStyle","bottom","right","border","cursor","transition","zIndex","micButtonStyle","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","onMouseOver","e","button","currentTarget","transform","onMouseOut","viewBox","fill","xmlns","d","className","animation","flexDirection","marginBottom","filter","size","textAlign","textTransform","letterSpacing","opacity","round","isOpen","onSendMessage","onClearHistory","onClose","_c3","$RefreshReg$"],"sources":["C:/Users/Krish/jarvis/web_gui/src/components/JarvisInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo, memo } from 'react';\nimport GlassyBlob from './GlassyBlob';\nimport { useAudioAnalyzer } from './AudioAnalyzer';\nimport ChatPanel from './ChatPanel';\n\nconst MemoizedGlassyBlob = memo(GlassyBlob);\nconst MemoizedChatPanel = memo(ChatPanel);\n\nconst JarvisInterface = () => {\n  const [mode, setMode] = useState('idle');\n  const [intensity, setIntensity] = useState(0.5);\n  const [userText, setUserText] = useState('');\n  const [assistantText, setAssistantText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [micEnabled, setMicEnabled] = useState(true);\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\n\n  const wsRef = useRef(null);\n  const responseRef = useRef('');\n  const lastTextInputRef = useRef(null);\n\n  // Helper function to safely send WebSocket messages\n  const sendWebSocketMessage = useCallback((message) => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(message));\n      return true;\n    }\n    console.warn('WebSocket not ready. Message not sent:', message);\n    return false;\n  }, []);\n\n  // Audio analyzer for real-time audio level monitoring\n  const { startListening, stopListening, isListening, audioLevel } = useAudioAnalyzer(\n    (level) => {\n      if (mode === 'listening' || mode === 'idle') {\n        setIntensity(prevIntensity => {\n          const newIntensity = Math.max(0.1, level * 1.5);\n          // Only update if the change is significant\n          if (Math.abs(newIntensity - prevIntensity) > 0.01) {\n            return newIntensity;\n          }\n          return prevIntensity;\n        });\n      }\n    }\n  );\n\n  const addToConversation = useCallback((role, text) => {\n    const messageId = `${role}-${text}-${Date.now()}`;\n    lastTextInputRef.current = { text, timestamp: Date.now() };\n    setConversationHistory(prev => [...prev, { role, text, timestamp: new Date().toLocaleTimeString(), id: messageId }]);\n  }, []);\n\n  const handleJarvisMessage = useCallback((data) => {\n    switch (data.type) {\n      case 'user_text':\n        if (lastTextInputRef.current && lastTextInputRef.current.text === data.text && (Date.now() - lastTextInputRef.current.timestamp) < 2000) {\n          // Duplicate, do nothing\n        } else {\n          addToConversation('user', data.text);\n        }\n        setIsWaitingForResponse(true);\n        break;\n      case 'assistant_stream':\n        setIsWaitingForResponse(false);\n        responseRef.current += data.text;\n        setCurrentResponse(responseRef.current);\n        break;\n      case 'assistant_final':\n        setAssistantText(data.text);\n        addToConversation('assistant', data.text);\n        responseRef.current = '';\n        setCurrentResponse('');\n        setIsWaitingForResponse(false);\n        setMode('idle');\n        setIntensity(0.5);\n        break;\n      case 'mode_change':\n        setMode(data.mode);\n        if (data.mode === 'listening') {\n          setIntensity(0.3);\n          if (micEnabled) startListening();\n        } else if (data.mode === 'speaking') {\n          setIntensity(data.intensity || 0.8);\n          stopListening();\n        } else if (data.mode === 'idle') {\n          setIntensity(0.5);\n          if (micEnabled) startListening();\n        } else {\n          setIntensity(0.5);\n          stopListening();\n        }\n        break;\n      case 'audio_level':\n        if (data.mode === 'speaking') {\n          setIntensity(Math.max(0.3, data.level * 1.2));\n        }\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  }, [addToConversation, micEnabled, startListening, stopListening]);\n\n  const connectToJarvis = useCallback(() => {\n    try {\n      wsRef.current = new WebSocket('ws://localhost:8765');\n      wsRef.current.onopen = () => {\n        console.log('Connected to Jarvis backend');\n        setIsConnected(true);\n        // Use the helper function to send message\n        sendWebSocketMessage({ type: 'enable_mic' });\n      };\n      wsRef.current.onmessage = (event) => handleJarvisMessage(JSON.parse(event.data));\n      wsRef.current.onclose = () => {\n        console.log('Disconnected from Jarvis backend');\n        setIsConnected(false);\n        setTimeout(connectToJarvis, 3000);\n      };\n      wsRef.current.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Failed to connect to Jarvis:', error);\n      setIsConnected(false);\n    }\n  }, [handleJarvisMessage, sendWebSocketMessage]);\n\n  useEffect(() => {\n    connectToJarvis();\n    return () => {\n      if (wsRef.current) wsRef.current.close();\n      stopListening();\n    };\n  }, [connectToJarvis, stopListening]);\n\n  const sendTextMessage = useCallback(() => {\n    if (userText.trim() && isConnected) {\n      const message = userText.trim();\n      addToConversation('user', message);\n      setIsWaitingForResponse(true);\n      // Use the helper function to send message\n      sendWebSocketMessage({ type: 'text_input', text: message });\n      setUserText('');\n    }\n  }, [userText, isConnected, addToConversation, sendWebSocketMessage]);\n\n  const toggleMicrophone = useCallback(async () => {\n    if (!micEnabled) {\n      try {\n        await startListening();\n        setMicEnabled(true);\n        // Use the helper function to send message\n        sendWebSocketMessage({ type: 'enable_mic' });\n      } catch (error) {\n        console.error('Failed to enable microphone:', error);\n      }\n    } else {\n      stopListening();\n      setMicEnabled(false);\n      // Use the helper function to send message\n      sendWebSocketMessage({ type: 'disable_mic' });\n    }\n  }, [micEnabled, startListening, stopListening, sendWebSocketMessage]);\n\n  const clearConversation = useCallback(() => {\n    setConversationHistory([]);\n    setCurrentResponse('');\n    responseRef.current = '';\n  }, []);\n\n  const [isChatOpen, setIsChatOpen] = useState(false);\n\n  const containerStyle = useMemo(() => ({\n    minHeight: '100vh',\n    background: 'linear-gradient(135deg, #000000 0%, #0a0a0a 100%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Inter, system-ui, sans-serif',\n    position: 'relative',\n    overflow: 'hidden'\n  }), []);\n\n  const connectionStatusStyle = useMemo(() => ({\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: isConnected ? '#00ff88' : '#ff4757',\n    fontSize: '12px',\n    fontWeight: '500',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '8px',\n    padding: '8px 12px',\n    background: 'rgba(0, 0, 0, 0.3)',\n    borderRadius: '20px',\n    backdropFilter: 'blur(10px)'\n  }), [isConnected]);\n\n  const connectionIndicatorStyle = useMemo(() => ({\n    width: '8px',\n    height: '8px',\n    borderRadius: '50%',\n    background: isConnected ? '#00ff88' : '#ff4757',\n    boxShadow: `0 0 10px ${isConnected ? '#00ff88' : '#ff4757'}`\n  }), [isConnected]);\n\n  const chatButtonStyle = useMemo(() => ({\n    position: 'fixed',\n    bottom: '40px',\n    right: '40px',\n    width: '50px',\n    height: '50px',\n    borderRadius: '50%',\n    background: 'rgba(64, 158, 255, 0.2)',\n    border: '1px solid rgba(64, 158, 255, 0.4)',\n    cursor: 'pointer',\n    display: isChatOpen ? 'none' : 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    zIndex: 1000,\n    boxShadow: '0 0 20px rgba(64, 158, 255, 0.3)'\n  }), [isChatOpen]);\n\n  const micButtonStyle = useMemo(() => ({\n    position: 'fixed',\n    bottom: '35px',\n    left: 'calc(50vw - 30px)',\n    width: '60px',\n    height: '60px',\n    borderRadius: '50%',\n    background: micEnabled\n      ? 'linear-gradient(135deg, #00ff88, #00d4aa)'\n      : 'rgba(36, 58, 82, 0.8)',\n    border: micEnabled\n      ? '2px solid rgba(0, 255, 136, 0.4)'\n      : '2px solid rgba(255, 255, 255, 0.2)',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    boxShadow: micEnabled\n      ? '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)'\n      : '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)',\n    zIndex: 1000\n  }), [micEnabled]);\n\n  return (\n    <div style={containerStyle}>\n      <div style={connectionStatusStyle}>\n        <div style={connectionIndicatorStyle}></div>\n        {isConnected ? 'Connected' : 'Disconnected'}\n      </div>\n\n      <button\n        onClick={() => setIsChatOpen(!isChatOpen)}\n        title=\"Toggle Chat Panel\"\n        style={chatButtonStyle}\n        onMouseOver={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1.1)';\n          button.style.background = 'rgba(64, 158, 255, 0.3)';\n          button.style.boxShadow = '0 0 30px rgba(64, 158, 255, 0.5)';\n        }}\n        onMouseOut={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1)';\n          button.style.background = 'rgba(64, 158, 255, 0.2)';\n          button.style.boxShadow = '0 0 20px rgba(64, 158, 255, 0.3)';\n        }}\n      >\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2ZM20 16H6L4 18V4H20V16Z\" fill=\"#409EFF\"/>\n        </svg>\n      </button>\n\n      <button\n        onClick={toggleMicrophone}\n        title={micEnabled ? \"Disable Microphone\" : \"Enable Microphone\"}\n        style={micButtonStyle}\n        onMouseOver={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1.1)';\n          if (micEnabled) {\n            button.style.boxShadow = '0 0 40px rgba(0, 255, 136, 0.6), 0 4px 20px rgba(0, 0, 0, 0.4)';\n          } else {\n            button.style.boxShadow = '0 0 30px rgba(36, 58, 82, 0.7), 0 4px 20px rgba(0, 0, 0, 0.4)';\n          }\n        }}\n        onMouseOut={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1)';\n          if (micEnabled) {\n            button.style.boxShadow = '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)';\n          } else {\n            button.style.boxShadow = '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)';\n          }\n        }}\n      >\n        <div style={{\n          width: '36px',\n          height: '36px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative'\n        }}>\n          <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mic-icon\">\n            <g className=\"mic-body\">\n              <path d=\"M12 15C13.6569 15 15 13.6569 15 12V6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6V12C9 13.6569 10.3431 15 12 15Z\" fill=\"white\"/>\n            </g>\n            <g className=\"mic-stand\">\n              <path d=\"M17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12H5C5 15.866 7.93452 19 11.5 19V22H12.5V19C16.0655 19 19 15.866 19 12H17Z\" fill=\"white\"/>\n            </g>\n          </svg>\n          {micEnabled && (\n            <>\n              <div style={{\n                position: 'absolute',\n                right: '-6px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                width: '4px',\n                height: '4px',\n                border: '1px solid rgba(0, 255, 136, 0.6)',\n                borderRadius: '50%',\n                animation: 'soundwave 2s ease-out infinite'\n              }} />\n              <div style={{\n                position: 'absolute',\n                right: '-10px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                width: '6px',\n                height: '6px',\n                border: '1px solid rgba(0, 255, 136, 0.4)',\n                borderRadius: '50%',\n                animation: 'soundwave 2s ease-out 0.3s infinite'\n              }} />\n            </>\n          )}\n        </div>\n      </button>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1\n      }}>\n        <div style={{\n          marginBottom: '30px',\n          filter: 'drop-shadow(0 0 50px rgba(255, 215, 0, 0.3))'\n        }}>\n          <MemoizedGlassyBlob\n            mode={mode}\n            intensity={intensity}\n            size={500}\n          />\n        </div>\n\n        <div style={{\n          color: 'rgba(255, 255, 255, 0.7)',\n          fontSize: '14px',\n          fontWeight: '400',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          letterSpacing: '2px',\n          opacity: 0.8\n        }}>\n          {mode === 'idle' && 'Ready'}\n          {mode === 'listening' && `Listening ${Math.round(audioLevel * 100)}%`}\n          {mode === 'thinking' && 'Processing...'}\n          {mode === 'speaking' && 'Speaking'}\n        </div>\n      </div>\n\n      <MemoizedChatPanel\n        isOpen={isChatOpen}\n        conversationHistory={conversationHistory}\n        currentResponse={currentResponse}\n        isWaitingForResponse={isWaitingForResponse}\n        onSendMessage={sendTextMessage}\n        userText={userText}\n        setUserText={setUserText}\n        isConnected={isConnected}\n        onClearHistory={clearConversation}\n        onClose={() => setIsChatOpen(false)}\n      />\n\n      <style>\n        {`\n          @keyframes blink {\n            0%, 50% { opacity: 1; }\n            51%, 100% { opacity: 0; }\n          }\n          \n          @keyframes slideIn {\n            from { transform: translateX(100%); }\n            to { transform: translateX(0); }\n          }\n          \n          @keyframes slideOut {\n            from { transform: translateX(0); }\n            to { transform: translateX(100%); }\n          }\n          \n          * {\n            box-sizing: border-box;\n          }\n          \n          ::-webkit-scrollbar {\n            width: 6px;\n          }\n          \n          ::-webkit-scrollbar-track {\n            background: rgba(255, 255, 255, 0.05);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb {\n            background: rgba(255, 255, 255, 0.2);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb:hover {\n            background: rgba(255, 255, 255, 0.3);\n          }\n          \n          @keyframes pulse {\n            from { \n              opacity: 0.6;\n              transform: translateX(-50%) scaleY(0.8);\n            }\n            to { \n              opacity: 1;\n              transform: translateX(-50%) scaleY(1.2);\n            }\n          }\n          \n          @keyframes soundwave {\n            0% {\n              transform: translateY(-50%) scale(0);\n              opacity: 1;\n            }\n            50% {\n              opacity: 0.5;\n            }\n            100% {\n              transform: translateY(-50%) scale(2);\n              opacity: 0;\n            }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default JarvisInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}