{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krish\\\\jarvis\\\\web_gui\\\\src\\\\components\\\\JarvisInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport GlassyBlob from './GlassyBlob';\nimport { useAudioAnalyzer } from './AudioAnalyzer';\nimport ChatPanel from './ChatPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JarvisInterface = () => {\n  _s();\n  const [mode, setMode] = useState('idle');\n  const [intensity, setIntensity] = useState(0.5);\n  const [userText, setUserText] = useState('');\n  const [assistantText, setAssistantText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [micEnabled, setMicEnabled] = useState(false);\n  const wsRef = useRef(null);\n  const responseRef = useRef('');\n\n  // Audio analyzer for real-time audio level monitoring\n  const {\n    startListening,\n    stopListening,\n    isListening,\n    audioLevel\n  } = useAudioAnalyzer(level => {\n    if (mode === 'listening') {\n      setIntensity(Math.max(0.1, level * 1.5)); // Scale and ensure minimum\n    }\n  });\n\n  // WebSocket connection to Python Jarvis backend\n  useEffect(() => {\n    connectToJarvis();\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      stopListening();\n    };\n  }, []);\n  const connectToJarvis = () => {\n    try {\n      wsRef.current = new WebSocket('ws://localhost:8765');\n      wsRef.current.onopen = () => {\n        console.log('Connected to Jarvis backend');\n        setIsConnected(true);\n      };\n      wsRef.current.onmessage = event => {\n        const data = JSON.parse(event.data);\n        handleJarvisMessage(data);\n      };\n      wsRef.current.onclose = () => {\n        console.log('Disconnected from Jarvis backend');\n        setIsConnected(false);\n        // Try to reconnect after 3 seconds\n        setTimeout(connectToJarvis, 3000);\n      };\n      wsRef.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Failed to connect to Jarvis:', error);\n      setIsConnected(false);\n    }\n  };\n  const handleJarvisMessage = data => {\n    switch (data.type) {\n      case 'user_text':\n        setUserText(data.text);\n        addToConversation('user', data.text);\n        break;\n      case 'assistant_stream':\n        responseRef.current += data.text;\n        setCurrentResponse(responseRef.current);\n        break;\n      case 'assistant_final':\n        setAssistantText(data.text);\n        addToConversation('assistant', data.text);\n        responseRef.current = '';\n        setCurrentResponse('');\n        setMode('idle');\n        setIntensity(0.5);\n        break;\n      case 'mode_change':\n        setMode(data.mode);\n        if (data.mode === 'listening') {\n          setIntensity(0.3);\n          if (micEnabled) {\n            startListening();\n          }\n        } else if (data.mode === 'speaking') {\n          setIntensity(data.intensity || 0.8);\n          stopListening();\n        } else {\n          setIntensity(0.5);\n          stopListening();\n        }\n        break;\n      case 'audio_level':\n        if (data.mode === 'speaking') {\n          setIntensity(Math.max(0.3, data.level * 1.2));\n        }\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  };\n  const addToConversation = (role, text) => {\n    setConversationHistory(prev => [...prev, {\n      role,\n      text,\n      timestamp: new Date().toLocaleTimeString()\n    }]);\n  };\n  const sendTextMessage = () => {\n    if (userText.trim() && wsRef.current && isConnected) {\n      wsRef.current.send(JSON.stringify({\n        type: 'text_input',\n        text: userText.trim()\n      }));\n      setMode('thinking');\n      setTimeout(() => setMode('speaking'), 500);\n      setUserText('');\n    }\n  };\n  const toggleMicrophone = async () => {\n    if (!micEnabled) {\n      try {\n        await startListening();\n        setMicEnabled(true);\n        if (wsRef.current && isConnected) {\n          wsRef.current.send(JSON.stringify({\n            type: 'enable_mic'\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to enable microphone:', error);\n      }\n    } else {\n      stopListening();\n      setMicEnabled(false);\n      if (wsRef.current && isConnected) {\n        wsRef.current.send(JSON.stringify({\n          type: 'disable_mic'\n        }));\n      }\n    }\n  };\n  const clearConversation = () => {\n    setConversationHistory([]);\n    setCurrentResponse('');\n    responseRef.current = '';\n  };\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #000000 0%, #0a0a0a 100%)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontFamily: 'Inter, system-ui, sans-serif',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: isConnected ? '#00ff88' : '#ff4757',\n        fontSize: '12px',\n        fontWeight: '500',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px',\n        padding: '8px 12px',\n        background: 'rgba(0, 0, 0, 0.3)',\n        borderRadius: '20px',\n        backdropFilter: 'blur(10px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '8px',\n          height: '8px',\n          borderRadius: '50%',\n          background: isConnected ? '#00ff88' : '#ff4757',\n          boxShadow: `0 0 10px ${isConnected ? '#00ff88' : '#ff4757'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), isConnected ? 'Connected' : 'Disconnected']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsChatOpen(!isChatOpen),\n      style: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        width: '50px',\n        height: '50px',\n        borderRadius: '50%',\n        background: 'rgba(255, 255, 255, 0.1)',\n        border: '1px solid rgba(255, 255, 255, 0.2)',\n        color: '#ffffff',\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '20px',\n        backdropFilter: 'blur(10px)',\n        transition: 'all 0.3s ease',\n        zIndex: 1000\n      },\n      onMouseOver: e => {\n        e.target.style.background = 'rgba(255, 255, 255, 0.2)';\n        e.target.style.transform = 'scale(1.05)';\n      },\n      onMouseOut: e => {\n        e.target.style.background = 'rgba(255, 255, 255, 0.1)';\n        e.target.style.transform = 'scale(1)';\n      },\n      children: isChatOpen ? '‚úï' : 'üí¨'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMicrophone,\n      style: {\n        position: 'absolute',\n        bottom: '30px',\n        left: '30px',\n        width: '60px',\n        height: '60px',\n        borderRadius: '50%',\n        background: micEnabled ? 'linear-gradient(135deg, #00ff88, #00d4aa)' : 'rgba(255, 255, 255, 0.1)',\n        border: micEnabled ? 'none' : '1px solid rgba(255, 255, 255, 0.2)',\n        color: micEnabled ? '#000' : '#fff',\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '24px',\n        backdropFilter: 'blur(10px)',\n        transition: 'all 0.3s ease',\n        boxShadow: micEnabled ? '0 0 30px rgba(0, 255, 136, 0.3)' : 'none'\n      },\n      onMouseOver: e => {\n        e.target.style.transform = 'scale(1.1)';\n      },\n      onMouseOut: e => {\n        e.target.style.transform = 'scale(1)';\n      },\n      children: micEnabled ? 'üéôÔ∏è' : 'üé§'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '30px',\n          filter: 'drop-shadow(0 0 50px rgba(255, 215, 0, 0.3))'\n        },\n        children: /*#__PURE__*/_jsxDEV(GlassyBlob, {\n          mode: mode,\n          intensity: intensity,\n          size: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'rgba(255, 255, 255, 0.7)',\n          fontSize: '14px',\n          fontWeight: '400',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          letterSpacing: '2px',\n          opacity: 0.8\n        },\n        children: [mode === 'idle' && 'Ready', mode === 'listening' && `Listening ${Math.round(audioLevel * 100)}%`, mode === 'thinking' && 'Processing...', mode === 'speaking' && 'Speaking']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatPanel, {\n      isOpen: isChatOpen,\n      conversationHistory: conversationHistory,\n      currentResponse: currentResponse,\n      onSendMessage: sendTextMessage,\n      userText: userText,\n      setUserText: setUserText,\n      isConnected: isConnected,\n      onClearHistory: clearConversation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n          \n          @keyframes blink {\n            0%, 50% { opacity: 1; }\n            51%, 100% { opacity: 0; }\n          }\n          \n          @keyframes slideIn {\n            from { transform: translateX(100%); }\n            to { transform: translateX(0); }\n          }\n          \n          @keyframes slideOut {\n            from { transform: translateX(0); }\n            to { transform: translateX(100%); }\n          }\n          \n          * {\n            box-sizing: border-box;\n          }\n          \n          ::-webkit-scrollbar {\n            width: 6px;\n          }\n          \n          ::-webkit-scrollbar-track {\n            background: rgba(255, 255, 255, 0.05);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb {\n            background: rgba(255, 255, 255, 0.2);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb:hover {\n            background: rgba(255, 255, 255, 0.3);\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(JarvisInterface, \"fcZEV2SRKiqBcGIqPBmeztXHhY8=\", false, function () {\n  return [useAudioAnalyzer];\n});\n_c = JarvisInterface;\nexport default JarvisInterface;\nvar _c;\n$RefreshReg$(_c, \"JarvisInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GlassyBlob","useAudioAnalyzer","ChatPanel","jsxDEV","_jsxDEV","JarvisInterface","_s","mode","setMode","intensity","setIntensity","userText","setUserText","assistantText","setAssistantText","isConnected","setIsConnected","conversationHistory","setConversationHistory","currentResponse","setCurrentResponse","micEnabled","setMicEnabled","wsRef","responseRef","startListening","stopListening","isListening","audioLevel","level","Math","max","connectToJarvis","current","close","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","handleJarvisMessage","onclose","setTimeout","onerror","error","type","text","addToConversation","role","prev","timestamp","Date","toLocaleTimeString","sendTextMessage","trim","send","stringify","toggleMicrophone","clearConversation","isChatOpen","setIsChatOpen","style","minHeight","background","display","alignItems","justifyContent","fontFamily","position","overflow","children","top","left","color","fontSize","fontWeight","gap","padding","borderRadius","backdropFilter","width","height","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","onClick","right","border","cursor","transition","zIndex","onMouseOver","e","target","transform","onMouseOut","bottom","flexDirection","marginBottom","filter","size","textAlign","textTransform","letterSpacing","opacity","round","isOpen","onSendMessage","onClearHistory","_c","$RefreshReg$"],"sources":["C:/Users/Krish/jarvis/web_gui/src/components/JarvisInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport GlassyBlob from './GlassyBlob';\r\nimport { useAudioAnalyzer } from './AudioAnalyzer';\r\nimport ChatPanel from './ChatPanel';\r\n\r\nconst JarvisInterface = () => {\r\n  const [mode, setMode] = useState('idle');\r\n  const [intensity, setIntensity] = useState(0.5);\r\n  const [userText, setUserText] = useState('');\r\n  const [assistantText, setAssistantText] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [conversationHistory, setConversationHistory] = useState([]);\r\n  const [currentResponse, setCurrentResponse] = useState('');\r\n  const [micEnabled, setMicEnabled] = useState(false);\r\n  \r\n  const wsRef = useRef(null);\r\n  const responseRef = useRef('');\r\n\r\n  // Audio analyzer for real-time audio level monitoring\r\n  const { startListening, stopListening, isListening, audioLevel } = useAudioAnalyzer(\r\n    (level) => {\r\n      if (mode === 'listening') {\r\n        setIntensity(Math.max(0.1, level * 1.5)); // Scale and ensure minimum\r\n      }\r\n    }\r\n  );\r\n\r\n  // WebSocket connection to Python Jarvis backend\r\n  useEffect(() => {\r\n    connectToJarvis();\r\n    \r\n    return () => {\r\n      if (wsRef.current) {\r\n        wsRef.current.close();\r\n      }\r\n      stopListening();\r\n    };\r\n  }, []);\r\n\r\n  const connectToJarvis = () => {\r\n    try {\r\n      wsRef.current = new WebSocket('ws://localhost:8765');\r\n      \r\n      wsRef.current.onopen = () => {\r\n        console.log('Connected to Jarvis backend');\r\n        setIsConnected(true);\r\n      };\r\n\r\n      wsRef.current.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        handleJarvisMessage(data);\r\n      };\r\n\r\n      wsRef.current.onclose = () => {\r\n        console.log('Disconnected from Jarvis backend');\r\n        setIsConnected(false);\r\n        // Try to reconnect after 3 seconds\r\n        setTimeout(connectToJarvis, 3000);\r\n      };\r\n\r\n      wsRef.current.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        setIsConnected(false);\r\n      };\r\n    } catch (error) {\r\n      console.error('Failed to connect to Jarvis:', error);\r\n      setIsConnected(false);\r\n    }\r\n  };\r\n\r\n  const handleJarvisMessage = (data) => {\r\n    switch (data.type) {\r\n      case 'user_text':\r\n        setUserText(data.text);\r\n        addToConversation('user', data.text);\r\n        break;\r\n        \r\n      case 'assistant_stream':\r\n        responseRef.current += data.text;\r\n        setCurrentResponse(responseRef.current);\r\n        break;\r\n        \r\n      case 'assistant_final':\r\n        setAssistantText(data.text);\r\n        addToConversation('assistant', data.text);\r\n        responseRef.current = '';\r\n        setCurrentResponse('');\r\n        setMode('idle');\r\n        setIntensity(0.5);\r\n        break;\r\n        \r\n      case 'mode_change':\r\n        setMode(data.mode);\r\n        if (data.mode === 'listening') {\r\n          setIntensity(0.3);\r\n          if (micEnabled) {\r\n            startListening();\r\n          }\r\n        } else if (data.mode === 'speaking') {\r\n          setIntensity(data.intensity || 0.8);\r\n          stopListening();\r\n        } else {\r\n          setIntensity(0.5);\r\n          stopListening();\r\n        }\r\n        break;\r\n        \r\n      case 'audio_level':\r\n        if (data.mode === 'speaking') {\r\n          setIntensity(Math.max(0.3, data.level * 1.2));\r\n        }\r\n        break;\r\n        \r\n      default:\r\n        console.log('Unknown message type:', data.type);\r\n    }\r\n  };\r\n\r\n  const addToConversation = (role, text) => {\r\n    setConversationHistory(prev => [...prev, { role, text, timestamp: new Date().toLocaleTimeString() }]);\r\n  };\r\n\r\n  const sendTextMessage = () => {\r\n    if (userText.trim() && wsRef.current && isConnected) {\r\n      wsRef.current.send(JSON.stringify({\r\n        type: 'text_input',\r\n        text: userText.trim()\r\n      }));\r\n      \r\n      setMode('thinking');\r\n      setTimeout(() => setMode('speaking'), 500);\r\n      setUserText('');\r\n    }\r\n  };\r\n\r\n  const toggleMicrophone = async () => {\r\n    if (!micEnabled) {\r\n      try {\r\n        await startListening();\r\n        setMicEnabled(true);\r\n        if (wsRef.current && isConnected) {\r\n          wsRef.current.send(JSON.stringify({ type: 'enable_mic' }));\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to enable microphone:', error);\r\n      }\r\n    } else {\r\n      stopListening();\r\n      setMicEnabled(false);\r\n      if (wsRef.current && isConnected) {\r\n        wsRef.current.send(JSON.stringify({ type: 'disable_mic' }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearConversation = () => {\r\n    setConversationHistory([]);\r\n    setCurrentResponse('');\r\n    responseRef.current = '';\r\n  };\r\n\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n\r\n  return (\r\n    <div style={{\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(135deg, #000000 0%, #0a0a0a 100%)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      fontFamily: 'Inter, system-ui, sans-serif',\r\n      position: 'relative',\r\n      overflow: 'hidden'\r\n    }}>\r\n      {/* Connection Status */}\r\n      <div style={{\r\n        position: 'absolute',\r\n        top: '20px',\r\n        left: '20px',\r\n        color: isConnected ? '#00ff88' : '#ff4757',\r\n        fontSize: '12px',\r\n        fontWeight: '500',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: '8px',\r\n        padding: '8px 12px',\r\n        background: 'rgba(0, 0, 0, 0.3)',\r\n        borderRadius: '20px',\r\n        backdropFilter: 'blur(10px)'\r\n      }}>\r\n        <div style={{\r\n          width: '8px',\r\n          height: '8px',\r\n          borderRadius: '50%',\r\n          background: isConnected ? '#00ff88' : '#ff4757',\r\n          boxShadow: `0 0 10px ${isConnected ? '#00ff88' : '#ff4757'}`\r\n        }}></div>\r\n        {isConnected ? 'Connected' : 'Disconnected'}\r\n      </div>\r\n\r\n      {/* Chat Toggle Button */}\r\n      <button\r\n        onClick={() => setIsChatOpen(!isChatOpen)}\r\n        style={{\r\n          position: 'absolute',\r\n          top: '20px',\r\n          right: '20px',\r\n          width: '50px',\r\n          height: '50px',\r\n          borderRadius: '50%',\r\n          background: 'rgba(255, 255, 255, 0.1)',\r\n          border: '1px solid rgba(255, 255, 255, 0.2)',\r\n          color: '#ffffff',\r\n          cursor: 'pointer',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          fontSize: '20px',\r\n          backdropFilter: 'blur(10px)',\r\n          transition: 'all 0.3s ease',\r\n          zIndex: 1000\r\n        }}\r\n        onMouseOver={(e) => {\r\n          e.target.style.background = 'rgba(255, 255, 255, 0.2)';\r\n          e.target.style.transform = 'scale(1.05)';\r\n        }}\r\n        onMouseOut={(e) => {\r\n          e.target.style.background = 'rgba(255, 255, 255, 0.1)';\r\n          e.target.style.transform = 'scale(1)';\r\n        }}\r\n      >\r\n        {isChatOpen ? '‚úï' : 'üí¨'}\r\n      </button>\r\n\r\n      {/* Professional Microphone Button */}\r\n      <button\r\n        onClick={toggleMicrophone}\r\n        style={{\r\n          position: 'absolute',\r\n          bottom: '30px',\r\n          left: '30px',\r\n          width: '60px',\r\n          height: '60px',\r\n          borderRadius: '50%',\r\n          background: micEnabled \r\n            ? 'linear-gradient(135deg, #00ff88, #00d4aa)' \r\n            : 'rgba(255, 255, 255, 0.1)',\r\n          border: micEnabled ? 'none' : '1px solid rgba(255, 255, 255, 0.2)',\r\n          color: micEnabled ? '#000' : '#fff',\r\n          cursor: 'pointer',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          fontSize: '24px',\r\n          backdropFilter: 'blur(10px)',\r\n          transition: 'all 0.3s ease',\r\n          boxShadow: micEnabled ? '0 0 30px rgba(0, 255, 136, 0.3)' : 'none'\r\n        }}\r\n        onMouseOver={(e) => {\r\n          e.target.style.transform = 'scale(1.1)';\r\n        }}\r\n        onMouseOut={(e) => {\r\n          e.target.style.transform = 'scale(1)';\r\n        }}\r\n      >\r\n        {micEnabled ? 'üéôÔ∏è' : 'üé§'}\r\n      </button>\r\n\r\n      {/* Main Blob Area */}\r\n      <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 1\r\n      }}>\r\n        {/* Glassy Blob without circle */}\r\n        <div style={{ \r\n          marginBottom: '30px',\r\n          filter: 'drop-shadow(0 0 50px rgba(255, 215, 0, 0.3))'\r\n        }}>\r\n          <GlassyBlob\r\n            mode={mode}\r\n            intensity={intensity}\r\n            size={500}\r\n          />\r\n        </div>\r\n\r\n        {/* Minimalist Status Display */}\r\n        <div style={{\r\n          color: 'rgba(255, 255, 255, 0.7)',\r\n          fontSize: '14px',\r\n          fontWeight: '400',\r\n          textAlign: 'center',\r\n          textTransform: 'uppercase',\r\n          letterSpacing: '2px',\r\n          opacity: 0.8\r\n        }}>\r\n          {mode === 'idle' && 'Ready'}\r\n          {mode === 'listening' && `Listening ${Math.round(audioLevel * 100)}%`}\r\n          {mode === 'thinking' && 'Processing...'}\r\n          {mode === 'speaking' && 'Speaking'}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Slide-out Chat Panel */}\r\n      <ChatPanel\r\n        isOpen={isChatOpen}\r\n        conversationHistory={conversationHistory}\r\n        currentResponse={currentResponse}\r\n        onSendMessage={sendTextMessage}\r\n        userText={userText}\r\n        setUserText={setUserText}\r\n        isConnected={isConnected}\r\n        onClearHistory={clearConversation}\r\n      />\r\n\r\n      {/* Global Styles */}\r\n      <style>\r\n        {`\r\n          @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\r\n          \r\n          @keyframes blink {\r\n            0%, 50% { opacity: 1; }\r\n            51%, 100% { opacity: 0; }\r\n          }\r\n          \r\n          @keyframes slideIn {\r\n            from { transform: translateX(100%); }\r\n            to { transform: translateX(0); }\r\n          }\r\n          \r\n          @keyframes slideOut {\r\n            from { transform: translateX(0); }\r\n            to { transform: translateX(100%); }\r\n          }\r\n          \r\n          * {\r\n            box-sizing: border-box;\r\n          }\r\n          \r\n          ::-webkit-scrollbar {\r\n            width: 6px;\r\n          }\r\n          \r\n          ::-webkit-scrollbar-track {\r\n            background: rgba(255, 255, 255, 0.05);\r\n            border-radius: 3px;\r\n          }\r\n          \r\n          ::-webkit-scrollbar-thumb {\r\n            background: rgba(255, 255, 255, 0.2);\r\n            border-radius: 3px;\r\n          }\r\n          \r\n          ::-webkit-scrollbar-thumb:hover {\r\n            background: rgba(255, 255, 255, 0.3);\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JarvisInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}