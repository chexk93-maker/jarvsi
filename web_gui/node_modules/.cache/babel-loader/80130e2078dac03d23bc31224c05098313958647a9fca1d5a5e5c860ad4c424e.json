{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krish\\\\jarvis\\\\web_gui\\\\src\\\\components\\\\JarvisInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo, memo } from 'react';\nimport GlassyBlob from './GlassyBlob';\nimport { useAudioAnalyzer } from './AudioAnalyzer';\nimport ChatPanel from './ChatPanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemoizedGlassyBlob = /*#__PURE__*/memo(GlassyBlob);\n_c = MemoizedGlassyBlob;\nconst MemoizedChatPanel = /*#__PURE__*/memo(ChatPanel);\n_c2 = MemoizedChatPanel;\nconst JarvisInterface = () => {\n  _s();\n  const [mode, setMode] = useState('idle');\n  const [intensity, setIntensity] = useState(0.5);\n  const [userText, setUserText] = useState('');\n  const [assistantText, setAssistantText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [micEnabled, setMicEnabled] = useState(true);\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\n  const wsRef = useRef(null);\n  const responseRef = useRef('');\n  const lastTextInputRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n\n  // Helper function to safely send WebSocket messages\n  const sendWebSocketMessage = useCallback(message => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(message));\n      return true;\n    }\n    console.warn('WebSocket not ready. Message not sent:', message);\n    return false;\n  }, []);\n\n  // Audio analyzer for real-time audio level monitoring\n  const {\n    startListening,\n    stopListening,\n    isListening,\n    audioLevel\n  } = useAudioAnalyzer(level => {\n    if (mode === 'listening' || mode === 'idle') {\n      setIntensity(prevIntensity => {\n        const newIntensity = Math.max(0.1, level * 1.5);\n        // Only update if the change is significant\n        if (Math.abs(newIntensity - prevIntensity) > 0.01) {\n          return newIntensity;\n        }\n        return prevIntensity;\n      });\n    }\n  });\n  const addToConversation = useCallback((role, text) => {\n    const messageId = `${role}-${text}-${Date.now()}`;\n    lastTextInputRef.current = {\n      text,\n      timestamp: Date.now()\n    };\n    setConversationHistory(prev => [...prev, {\n      role,\n      text,\n      timestamp: new Date().toLocaleTimeString(),\n      id: messageId\n    }]);\n  }, []);\n  const handleJarvisMessage = useCallback(data => {\n    switch (data.type) {\n      case 'user_text':\n        if (lastTextInputRef.current && lastTextInputRef.current.text === data.text && Date.now() - lastTextInputRef.current.timestamp < 2000) {\n          // Duplicate, do nothing\n        } else {\n          addToConversation('user', data.text);\n        }\n        setIsWaitingForResponse(true);\n        break;\n      case 'assistant_stream':\n        setIsWaitingForResponse(false);\n        responseRef.current += data.text;\n        setCurrentResponse(responseRef.current);\n        break;\n      case 'assistant_final':\n        setAssistantText(data.text);\n        addToConversation('assistant', data.text);\n        responseRef.current = '';\n        setCurrentResponse('');\n        setIsWaitingForResponse(false);\n        setMode('idle');\n        setIntensity(0.5);\n        break;\n      case 'mode_change':\n        setMode(data.mode);\n        if (data.mode === 'listening') {\n          setIntensity(0.3);\n          if (micEnabled) startListening();\n        } else if (data.mode === 'speaking') {\n          setIntensity(data.intensity || 0.8);\n          stopListening();\n        } else if (data.mode === 'idle') {\n          setIntensity(0.5);\n          if (micEnabled) startListening();\n        } else {\n          setIntensity(0.5);\n          stopListening();\n        }\n        break;\n      case 'audio_level':\n        if (data.mode === 'speaking') {\n          setIntensity(Math.max(0.3, data.level * 1.2));\n        }\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  }, [addToConversation, micEnabled, startListening, stopListening]);\n  const connectToJarvis = useCallback(() => {\n    // Clear any existing reconnection timeout\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current.timeout);\n      reconnectTimeoutRef.current = null;\n    }\n\n    // Prevent multiple simultaneous connection attempts\n    if (isConnectingRef.current || wsRef.current && wsRef.current.readyState === WebSocket.CONNECTING) {\n      console.log('Connection attempt already in progress');\n      return;\n    }\n\n    // Check if we're already connected\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      console.log('Already connected to Jarvis backend');\n      setIsConnected(true);\n      return;\n    }\n    try {\n      isConnectingRef.current = true;\n      console.log('Attempting to connect to Jarvis backend...');\n      wsRef.current = new WebSocket('ws://localhost:8765');\n      wsRef.current.onopen = () => {\n        isConnectingRef.current = false;\n        console.log('Connected to Jarvis backend');\n        setIsConnected(true);\n        // Reset reconnection attempt counter on successful connection\n        reconnectTimeoutRef.current = {\n          attempt: 0\n        };\n        // Use the helper function to send message\n        sendWebSocketMessage({\n          type: 'enable_mic'\n        });\n      };\n      wsRef.current.onmessage = event => handleJarvisMessage(JSON.parse(event.data));\n      wsRef.current.onclose = event => {\n        isConnectingRef.current = false;\n        console.log('Disconnected from Jarvis backend', event);\n        setIsConnected(false);\n\n        // Check if it was a clean close or an error\n        if (event.wasClean) {\n          console.log('Connection closed cleanly');\n        } else {\n          console.log('Connection closed unexpectedly');\n        }\n        console.log('Close code:', event.code);\n        console.log('Close reason:', event.reason);\n\n        // Only attempt reconnection if not explicitly closed by the component\n        if (!event.wasClean) {\n          var _reconnectTimeoutRef$, _reconnectTimeoutRef$2;\n          console.log('Unclean disconnect, scheduling reconnection...');\n          // Exponential backoff: start with 3 seconds, max 30 seconds\n          const reconnectDelay = Math.min(3000 * Math.pow(1.5, ((_reconnectTimeoutRef$ = reconnectTimeoutRef.current) === null || _reconnectTimeoutRef$ === void 0 ? void 0 : _reconnectTimeoutRef$.attempt) || 0), 30000);\n          reconnectTimeoutRef.current = {\n            attempt: (((_reconnectTimeoutRef$2 = reconnectTimeoutRef.current) === null || _reconnectTimeoutRef$2 === void 0 ? void 0 : _reconnectTimeoutRef$2.attempt) || 0) + 1,\n            timeout: setTimeout(connectToJarvis, reconnectDelay)\n          };\n          console.log(`Reconnection scheduled in ${reconnectDelay}ms`);\n        }\n      };\n      wsRef.current.onerror = error => {\n        var _wsRef$current, _wsRef$current2, _wsRef$current3, _wsRef$current4;\n        isConnectingRef.current = false;\n        console.error('WebSocket error:', error);\n        console.error('WebSocket readyState:', (_wsRef$current = wsRef.current) === null || _wsRef$current === void 0 ? void 0 : _wsRef$current.readyState);\n        console.error('WebSocket URL:', (_wsRef$current2 = wsRef.current) === null || _wsRef$current2 === void 0 ? void 0 : _wsRef$current2.url);\n\n        // More descriptive error messages\n        if (((_wsRef$current3 = wsRef.current) === null || _wsRef$current3 === void 0 ? void 0 : _wsRef$current3.readyState) === WebSocket.CLOSED) {\n          console.error('WebSocket connection failed - server may be down or port unavailable');\n        } else if (((_wsRef$current4 = wsRef.current) === null || _wsRef$current4 === void 0 ? void 0 : _wsRef$current4.readyState) === WebSocket.CONNECTING) {\n          console.error('WebSocket connection failed during handshake');\n        }\n        setIsConnected(false);\n      };\n    } catch (error) {\n      var _reconnectTimeoutRef$3, _reconnectTimeoutRef$4;\n      isConnectingRef.current = false;\n      console.error('Failed to connect to Jarvis:', error);\n      setIsConnected(false);\n\n      // Schedule reconnection with exponential backoff\n      const reconnectDelay = Math.min(3000 * Math.pow(1.5, ((_reconnectTimeoutRef$3 = reconnectTimeoutRef.current) === null || _reconnectTimeoutRef$3 === void 0 ? void 0 : _reconnectTimeoutRef$3.attempt) || 0), 30000);\n      reconnectTimeoutRef.current = {\n        attempt: (((_reconnectTimeoutRef$4 = reconnectTimeoutRef.current) === null || _reconnectTimeoutRef$4 === void 0 ? void 0 : _reconnectTimeoutRef$4.attempt) || 0) + 1,\n        timeout: setTimeout(connectToJarvis, reconnectDelay)\n      };\n      console.log(`Reconnection scheduled in ${reconnectDelay}ms due to error`);\n    }\n  }, [handleJarvisMessage, sendWebSocketMessage]);\n  useEffect(() => {\n    connectToJarvis();\n    return () => {\n      // Clear reconnection timeout\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current.timeout);\n        reconnectTimeoutRef.current = null;\n      }\n\n      // Close WebSocket connection cleanly\n      if (wsRef.current) {\n        try {\n          wsRef.current.onclose = null; // Remove onclose handler to prevent reconnection\n          wsRef.current.close(1000, 'Component unmounted');\n        } catch (e) {\n          console.log('Error closing WebSocket:', e);\n        }\n        wsRef.current = null;\n      }\n      stopListening();\n      isConnectingRef.current = false;\n    };\n  }, [connectToJarvis, stopListening]);\n  const sendTextMessage = useCallback(() => {\n    if (userText.trim() && isConnected) {\n      const message = userText.trim();\n      addToConversation('user', message);\n      setIsWaitingForResponse(true);\n      // Use the helper function to send message\n      sendWebSocketMessage({\n        type: 'text_input',\n        text: message\n      });\n      setUserText('');\n    }\n  }, [userText, isConnected, addToConversation, sendWebSocketMessage]);\n  const toggleMicrophone = useCallback(async () => {\n    if (!micEnabled) {\n      try {\n        await startListening();\n        setMicEnabled(true);\n        // Use the helper function to send message\n        sendWebSocketMessage({\n          type: 'enable_mic'\n        });\n      } catch (error) {\n        console.error('Failed to enable microphone:', error);\n      }\n    } else {\n      stopListening();\n      setMicEnabled(false);\n      // Use the helper function to send message\n      sendWebSocketMessage({\n        type: 'disable_mic'\n      });\n    }\n  }, [micEnabled, startListening, stopListening, sendWebSocketMessage]);\n  const clearConversation = useCallback(() => {\n    setConversationHistory([]);\n    setCurrentResponse('');\n    responseRef.current = '';\n  }, []);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const containerStyle = useMemo(() => ({\n    minHeight: '100vh',\n    background: 'linear-gradient(135deg, #000000 0%, #0a0a0a 100%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Inter, system-ui, sans-serif',\n    position: 'relative',\n    overflow: 'hidden'\n  }), []);\n  const connectionStatusStyle = useMemo(() => ({\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: isConnected ? '#00ff88' : '#ff4757',\n    fontSize: '12px',\n    fontWeight: '500',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '8px',\n    padding: '8px 12px',\n    background: 'rgba(0, 0, 0, 0.3)',\n    borderRadius: '20px',\n    backdropFilter: 'blur(10px)'\n  }), [isConnected]);\n  const connectionIndicatorStyle = useMemo(() => ({\n    width: '8px',\n    height: '8px',\n    borderRadius: '50%',\n    background: isConnected ? '#00ff88' : '#ff4757',\n    boxShadow: `0 0 10px ${isConnected ? '#00ff88' : '#ff4757'}`\n  }), [isConnected]);\n  const chatButtonStyle = useMemo(() => ({\n    position: 'fixed',\n    bottom: '40px',\n    right: '40px',\n    width: '50px',\n    height: '50px',\n    borderRadius: '50%',\n    background: 'rgba(64, 158, 255, 0.2)',\n    border: '1px solid rgba(64, 158, 255, 0.4)',\n    cursor: 'pointer',\n    display: isChatOpen ? 'none' : 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    zIndex: 1000,\n    boxShadow: '0 0 20px rgba(64, 158, 255, 0.3)'\n  }), [isChatOpen]);\n  const micButtonStyle = useMemo(() => ({\n    position: 'fixed',\n    bottom: '35px',\n    left: 'calc(50vw - 30px)',\n    width: '60px',\n    height: '60px',\n    borderRadius: '50%',\n    background: micEnabled ? 'linear-gradient(135deg, #00ff88, #00d4aa)' : 'rgba(36, 58, 82, 0.8)',\n    border: micEnabled ? '2px solid rgba(0, 255, 136, 0.4)' : '2px solid rgba(255, 255, 255, 0.2)',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    boxShadow: micEnabled ? '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)' : '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)',\n    zIndex: 1000\n  }), [micEnabled]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: connectionStatusStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: connectionIndicatorStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), isConnected ? 'Connected' : 'Disconnected', !isConnected && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '8px',\n          fontStyle: 'italic'\n        },\n        children: \"(Retrying...)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsChatOpen(!isChatOpen),\n      title: \"Toggle Chat Panel\",\n      style: chatButtonStyle,\n      onMouseOver: e => {\n        const button = e.currentTarget;\n        button.style.transform = 'scale(1.1)';\n        button.style.background = 'rgba(64, 158, 255, 0.3)';\n        button.style.boxShadow = '0 0 30px rgba(64, 158, 255, 0.5)';\n      },\n      onMouseOut: e => {\n        const button = e.currentTarget;\n        button.style.transform = 'scale(1)';\n        button.style.background = 'rgba(64, 158, 255, 0.2)';\n        button.style.boxShadow = '0 0 20px rgba(64, 158, 255, 0.3)';\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2ZM20 16H6L4 18V4H20V16Z\",\n          fill: \"#409EFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMicrophone,\n      title: micEnabled ? \"Disable Microphone\" : \"Enable Microphone\",\n      style: micButtonStyle,\n      onMouseOver: e => {\n        const button = e.currentTarget;\n        button.style.transform = 'scale(1.1)';\n        if (micEnabled) {\n          button.style.boxShadow = '0 0 40px rgba(0, 255, 136, 0.6), 0 4px 20px rgba(0, 0, 0, 0.4)';\n        } else {\n          button.style.boxShadow = '0 0 30px rgba(36, 58, 82, 0.7), 0 4px 20px rgba(0, 0, 0, 0.4)';\n        }\n      },\n      onMouseOut: e => {\n        const button = e.currentTarget;\n        button.style.transform = 'scale(1)';\n        if (micEnabled) {\n          button.style.boxShadow = '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)';\n        } else {\n          button.style.boxShadow = '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)';\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '36px',\n          height: '36px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"32\",\n          height: \"32\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"mic-icon\",\n          children: [/*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"mic-body\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 15C13.6569 15 15 13.6569 15 12V6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6V12C9 13.6569 10.3431 15 12 15Z\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"mic-stand\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12H5C5 15.866 7.93452 19 11.5 19V22H12.5V19C16.0655 19 19 15.866 19 12H17Z\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), micEnabled && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '-6px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              width: '4px',\n              height: '4px',\n              border: '1px solid rgba(0, 255, 136, 0.6)',\n              borderRadius: '50%',\n              animation: 'soundwave 2s ease-out infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '-10px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              width: '6px',\n              height: '6px',\n              border: '1px solid rgba(0, 255, 136, 0.4)',\n              borderRadius: '50%',\n              animation: 'soundwave 2s ease-out 0.3s infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '30px',\n          filter: 'drop-shadow(0 0 50px rgba(255, 215, 0, 0.3))'\n        },\n        children: /*#__PURE__*/_jsxDEV(MemoizedGlassyBlob, {\n          mode: mode,\n          intensity: intensity,\n          size: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'rgba(255, 255, 255, 0.7)',\n          fontSize: '14px',\n          fontWeight: '400',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          letterSpacing: '2px',\n          opacity: 0.8\n        },\n        children: [mode === 'idle' && 'Ready', mode === 'listening' && `Listening ${Math.round(audioLevel * 100)}%`, mode === 'thinking' && 'Processing...', mode === 'speaking' && 'Speaking']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MemoizedChatPanel, {\n      isOpen: isChatOpen,\n      conversationHistory: conversationHistory,\n      currentResponse: currentResponse,\n      isWaitingForResponse: isWaitingForResponse,\n      onSendMessage: sendTextMessage,\n      userText: userText,\n      setUserText: setUserText,\n      isConnected: isConnected,\n      onClearHistory: clearConversation,\n      onClose: () => setIsChatOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes blink {\n            0%, 50% { opacity: 1; }\n            51%, 100% { opacity: 0; }\n          }\n          \n          @keyframes slideIn {\n            from { transform: translateX(100%); }\n            to { transform: translateX(0); }\n          }\n          \n          @keyframes slideOut {\n            from { transform: translateX(0); }\n            to { transform: translateX(100%); }\n          }\n          \n          * {\n            box-sizing: border-box;\n          }\n          \n          ::-webkit-scrollbar {\n            width: 6px;\n          }\n          \n          ::-webkit-scrollbar-track {\n            background: rgba(255, 255, 255, 0.05);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb {\n            background: rgba(255, 255, 255, 0.2);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb:hover {\n            background: rgba(255, 255, 255, 0.3);\n          }\n          \n          @keyframes pulse {\n            from { \n              opacity: 0.6;\n              transform: translateX(-50%) scaleY(0.8);\n            }\n            to { \n              opacity: 1;\n              transform: translateX(-50%) scaleY(1.2);\n            }\n          }\n          \n          @keyframes soundwave {\n            0% {\n              transform: translateY(-50%) scale(0);\n              opacity: 1;\n            }\n            50% {\n              opacity: 0.5;\n            }\n            100% {\n              transform: translateY(-50%) scale(2);\n              opacity: 0;\n            }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(JarvisInterface, \"u23GBIThYDW5SD7yPcUd3IYP+BU=\", false, function () {\n  return [useAudioAnalyzer];\n});\n_c3 = JarvisInterface;\nexport default JarvisInterface;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MemoizedGlassyBlob\");\n$RefreshReg$(_c2, \"MemoizedChatPanel\");\n$RefreshReg$(_c3, \"JarvisInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","memo","GlassyBlob","useAudioAnalyzer","ChatPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","MemoizedGlassyBlob","_c","MemoizedChatPanel","_c2","JarvisInterface","_s","mode","setMode","intensity","setIntensity","userText","setUserText","assistantText","setAssistantText","isConnected","setIsConnected","conversationHistory","setConversationHistory","currentResponse","setCurrentResponse","micEnabled","setMicEnabled","isWaitingForResponse","setIsWaitingForResponse","wsRef","responseRef","lastTextInputRef","reconnectTimeoutRef","isConnectingRef","sendWebSocketMessage","message","current","readyState","WebSocket","OPEN","send","JSON","stringify","console","warn","startListening","stopListening","isListening","audioLevel","level","prevIntensity","newIntensity","Math","max","abs","addToConversation","role","text","messageId","Date","now","timestamp","prev","toLocaleTimeString","id","handleJarvisMessage","data","type","log","connectToJarvis","clearTimeout","timeout","CONNECTING","onopen","attempt","onmessage","event","parse","onclose","wasClean","code","reason","_reconnectTimeoutRef$","_reconnectTimeoutRef$2","reconnectDelay","min","pow","setTimeout","onerror","error","_wsRef$current","_wsRef$current2","_wsRef$current3","_wsRef$current4","url","CLOSED","_reconnectTimeoutRef$3","_reconnectTimeoutRef$4","close","e","sendTextMessage","trim","toggleMicrophone","clearConversation","isChatOpen","setIsChatOpen","containerStyle","minHeight","background","display","alignItems","justifyContent","fontFamily","position","overflow","connectionStatusStyle","top","left","color","fontSize","fontWeight","gap","padding","borderRadius","backdropFilter","connectionIndicatorStyle","width","height","boxShadow","chatButtonStyle","bottom","right","border","cursor","transition","zIndex","micButtonStyle","style","children","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","fontStyle","onClick","title","onMouseOver","button","currentTarget","transform","onMouseOut","viewBox","fill","xmlns","d","className","animation","flexDirection","marginBottom","filter","size","textAlign","textTransform","letterSpacing","opacity","round","isOpen","onSendMessage","onClearHistory","onClose","_c3","$RefreshReg$"],"sources":["C:/Users/Krish/jarvis/web_gui/src/components/JarvisInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo, memo } from 'react';\nimport GlassyBlob from './GlassyBlob';\nimport { useAudioAnalyzer } from './AudioAnalyzer';\nimport ChatPanel from './ChatPanel';\n\nconst MemoizedGlassyBlob = memo(GlassyBlob);\nconst MemoizedChatPanel = memo(ChatPanel);\n\nconst JarvisInterface = () => {\n  const [mode, setMode] = useState('idle');\n  const [intensity, setIntensity] = useState(0.5);\n  const [userText, setUserText] = useState('');\n  const [assistantText, setAssistantText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [micEnabled, setMicEnabled] = useState(true);\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\n\n  const wsRef = useRef(null);\n  const responseRef = useRef('');\n  const lastTextInputRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n\n  // Helper function to safely send WebSocket messages\n  const sendWebSocketMessage = useCallback((message) => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(message));\n      return true;\n    }\n    console.warn('WebSocket not ready. Message not sent:', message);\n    return false;\n  }, []);\n\n  // Audio analyzer for real-time audio level monitoring\n  const { startListening, stopListening, isListening, audioLevel } = useAudioAnalyzer(\n    (level) => {\n      if (mode === 'listening' || mode === 'idle') {\n        setIntensity(prevIntensity => {\n          const newIntensity = Math.max(0.1, level * 1.5);\n          // Only update if the change is significant\n          if (Math.abs(newIntensity - prevIntensity) > 0.01) {\n            return newIntensity;\n          }\n          return prevIntensity;\n        });\n      }\n    }\n  );\n\n  const addToConversation = useCallback((role, text) => {\n    const messageId = `${role}-${text}-${Date.now()}`;\n    lastTextInputRef.current = { text, timestamp: Date.now() };\n    setConversationHistory(prev => [...prev, { role, text, timestamp: new Date().toLocaleTimeString(), id: messageId }]);\n  }, []);\n\n  const handleJarvisMessage = useCallback((data) => {\n    switch (data.type) {\n      case 'user_text':\n        if (lastTextInputRef.current && lastTextInputRef.current.text === data.text && (Date.now() - lastTextInputRef.current.timestamp) < 2000) {\n          // Duplicate, do nothing\n        } else {\n          addToConversation('user', data.text);\n        }\n        setIsWaitingForResponse(true);\n        break;\n      case 'assistant_stream':\n        setIsWaitingForResponse(false);\n        responseRef.current += data.text;\n        setCurrentResponse(responseRef.current);\n        break;\n      case 'assistant_final':\n        setAssistantText(data.text);\n        addToConversation('assistant', data.text);\n        responseRef.current = '';\n        setCurrentResponse('');\n        setIsWaitingForResponse(false);\n        setMode('idle');\n        setIntensity(0.5);\n        break;\n      case 'mode_change':\n        setMode(data.mode);\n        if (data.mode === 'listening') {\n          setIntensity(0.3);\n          if (micEnabled) startListening();\n        } else if (data.mode === 'speaking') {\n          setIntensity(data.intensity || 0.8);\n          stopListening();\n        } else if (data.mode === 'idle') {\n          setIntensity(0.5);\n          if (micEnabled) startListening();\n        } else {\n          setIntensity(0.5);\n          stopListening();\n        }\n        break;\n      case 'audio_level':\n        if (data.mode === 'speaking') {\n          setIntensity(Math.max(0.3, data.level * 1.2));\n        }\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  }, [addToConversation, micEnabled, startListening, stopListening]);\n\n  const connectToJarvis = useCallback(() => {\n    // Clear any existing reconnection timeout\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current.timeout);\n      reconnectTimeoutRef.current = null;\n    }\n\n    // Prevent multiple simultaneous connection attempts\n    if (isConnectingRef.current || (wsRef.current && wsRef.current.readyState === WebSocket.CONNECTING)) {\n      console.log('Connection attempt already in progress');\n      return;\n    }\n\n    // Check if we're already connected\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      console.log('Already connected to Jarvis backend');\n      setIsConnected(true);\n      return;\n    }\n\n    try {\n      isConnectingRef.current = true;\n      console.log('Attempting to connect to Jarvis backend...');\n      wsRef.current = new WebSocket('ws://localhost:8765');\n      \n      wsRef.current.onopen = () => {\n        isConnectingRef.current = false;\n        console.log('Connected to Jarvis backend');\n        setIsConnected(true);\n        // Reset reconnection attempt counter on successful connection\n        reconnectTimeoutRef.current = { attempt: 0 };\n        // Use the helper function to send message\n        sendWebSocketMessage({ type: 'enable_mic' });\n      };\n      wsRef.current.onmessage = (event) => handleJarvisMessage(JSON.parse(event.data));\n      wsRef.current.onclose = (event) => {\n        isConnectingRef.current = false;\n        console.log('Disconnected from Jarvis backend', event);\n        setIsConnected(false);\n        \n        // Check if it was a clean close or an error\n        if (event.wasClean) {\n          console.log('Connection closed cleanly');\n        } else {\n          console.log('Connection closed unexpectedly');\n        }\n        console.log('Close code:', event.code);\n        console.log('Close reason:', event.reason);\n        \n        // Only attempt reconnection if not explicitly closed by the component\n        if (!event.wasClean) {\n          console.log('Unclean disconnect, scheduling reconnection...');\n          // Exponential backoff: start with 3 seconds, max 30 seconds\n          const reconnectDelay = Math.min(3000 * Math.pow(1.5, (reconnectTimeoutRef.current?.attempt || 0)), 30000);\n          reconnectTimeoutRef.current = { \n            attempt: (reconnectTimeoutRef.current?.attempt || 0) + 1,\n            timeout: setTimeout(connectToJarvis, reconnectDelay)\n          };\n          console.log(`Reconnection scheduled in ${reconnectDelay}ms`);\n        }\n      };\n      wsRef.current.onerror = (error) => {\n        isConnectingRef.current = false;\n        console.error('WebSocket error:', error);\n        console.error('WebSocket readyState:', wsRef.current?.readyState);\n        console.error('WebSocket URL:', wsRef.current?.url);\n        \n        // More descriptive error messages\n        if (wsRef.current?.readyState === WebSocket.CLOSED) {\n          console.error('WebSocket connection failed - server may be down or port unavailable');\n        } else if (wsRef.current?.readyState === WebSocket.CONNECTING) {\n          console.error('WebSocket connection failed during handshake');\n        }\n        \n        setIsConnected(false);\n      };\n    } catch (error) {\n      isConnectingRef.current = false;\n      console.error('Failed to connect to Jarvis:', error);\n      setIsConnected(false);\n      \n      // Schedule reconnection with exponential backoff\n      const reconnectDelay = Math.min(3000 * Math.pow(1.5, (reconnectTimeoutRef.current?.attempt || 0)), 30000);\n      reconnectTimeoutRef.current = { \n        attempt: (reconnectTimeoutRef.current?.attempt || 0) + 1,\n        timeout: setTimeout(connectToJarvis, reconnectDelay)\n      };\n      console.log(`Reconnection scheduled in ${reconnectDelay}ms due to error`);\n    }\n  }, [handleJarvisMessage, sendWebSocketMessage]);\n\n  useEffect(() => {\n    connectToJarvis();\n    return () => {\n      // Clear reconnection timeout\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current.timeout);\n        reconnectTimeoutRef.current = null;\n      }\n      \n      // Close WebSocket connection cleanly\n      if (wsRef.current) {\n        try {\n          wsRef.current.onclose = null; // Remove onclose handler to prevent reconnection\n          wsRef.current.close(1000, 'Component unmounted');\n        } catch (e) {\n          console.log('Error closing WebSocket:', e);\n        }\n        wsRef.current = null;\n      }\n      \n      stopListening();\n      isConnectingRef.current = false;\n    };\n  }, [connectToJarvis, stopListening]);\n\n  const sendTextMessage = useCallback(() => {\n    if (userText.trim() && isConnected) {\n      const message = userText.trim();\n      addToConversation('user', message);\n      setIsWaitingForResponse(true);\n      // Use the helper function to send message\n      sendWebSocketMessage({ type: 'text_input', text: message });\n      setUserText('');\n    }\n  }, [userText, isConnected, addToConversation, sendWebSocketMessage]);\n\n  const toggleMicrophone = useCallback(async () => {\n    if (!micEnabled) {\n      try {\n        await startListening();\n        setMicEnabled(true);\n        // Use the helper function to send message\n        sendWebSocketMessage({ type: 'enable_mic' });\n      } catch (error) {\n        console.error('Failed to enable microphone:', error);\n      }\n    } else {\n      stopListening();\n      setMicEnabled(false);\n      // Use the helper function to send message\n      sendWebSocketMessage({ type: 'disable_mic' });\n    }\n  }, [micEnabled, startListening, stopListening, sendWebSocketMessage]);\n\n  const clearConversation = useCallback(() => {\n    setConversationHistory([]);\n    setCurrentResponse('');\n    responseRef.current = '';\n  }, []);\n\n  const [isChatOpen, setIsChatOpen] = useState(false);\n\n  const containerStyle = useMemo(() => ({\n    minHeight: '100vh',\n    background: 'linear-gradient(135deg, #000000 0%, #0a0a0a 100%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Inter, system-ui, sans-serif',\n    position: 'relative',\n    overflow: 'hidden'\n  }), []);\n\n  const connectionStatusStyle = useMemo(() => ({\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: isConnected ? '#00ff88' : '#ff4757',\n    fontSize: '12px',\n    fontWeight: '500',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '8px',\n    padding: '8px 12px',\n    background: 'rgba(0, 0, 0, 0.3)',\n    borderRadius: '20px',\n    backdropFilter: 'blur(10px)'\n  }), [isConnected]);\n\n  const connectionIndicatorStyle = useMemo(() => ({\n    width: '8px',\n    height: '8px',\n    borderRadius: '50%',\n    background: isConnected ? '#00ff88' : '#ff4757',\n    boxShadow: `0 0 10px ${isConnected ? '#00ff88' : '#ff4757'}`\n  }), [isConnected]);\n\n  const chatButtonStyle = useMemo(() => ({\n    position: 'fixed',\n    bottom: '40px',\n    right: '40px',\n    width: '50px',\n    height: '50px',\n    borderRadius: '50%',\n    background: 'rgba(64, 158, 255, 0.2)',\n    border: '1px solid rgba(64, 158, 255, 0.4)',\n    cursor: 'pointer',\n    display: isChatOpen ? 'none' : 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    zIndex: 1000,\n    boxShadow: '0 0 20px rgba(64, 158, 255, 0.3)'\n  }), [isChatOpen]);\n\n  const micButtonStyle = useMemo(() => ({\n    position: 'fixed',\n    bottom: '35px',\n    left: 'calc(50vw - 30px)',\n    width: '60px',\n    height: '60px',\n    borderRadius: '50%',\n    background: micEnabled\n      ? 'linear-gradient(135deg, #00ff88, #00d4aa)'\n      : 'rgba(36, 58, 82, 0.8)',\n    border: micEnabled\n      ? '2px solid rgba(0, 255, 136, 0.4)'\n      : '2px solid rgba(255, 255, 255, 0.2)',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    boxShadow: micEnabled\n      ? '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)'\n      : '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)',\n    zIndex: 1000\n  }), [micEnabled]);\n\n  return (\n    <div style={containerStyle}>\n      <div style={connectionStatusStyle}>\n        <div style={connectionIndicatorStyle}></div>\n        {isConnected ? 'Connected' : 'Disconnected'}\n        {!isConnected && (\n          <span style={{ marginLeft: '8px', fontStyle: 'italic' }}>\n            (Retrying...)\n          </span>\n        )}\n      </div>\n\n      <button\n        onClick={() => setIsChatOpen(!isChatOpen)}\n        title=\"Toggle Chat Panel\"\n        style={chatButtonStyle}\n        onMouseOver={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1.1)';\n          button.style.background = 'rgba(64, 158, 255, 0.3)';\n          button.style.boxShadow = '0 0 30px rgba(64, 158, 255, 0.5)';\n        }}\n        onMouseOut={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1)';\n          button.style.background = 'rgba(64, 158, 255, 0.2)';\n          button.style.boxShadow = '0 0 20px rgba(64, 158, 255, 0.3)';\n        }}\n      >\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2ZM20 16H6L4 18V4H20V16Z\" fill=\"#409EFF\"/>\n        </svg>\n      </button>\n\n      <button\n        onClick={toggleMicrophone}\n        title={micEnabled ? \"Disable Microphone\" : \"Enable Microphone\"}\n        style={micButtonStyle}\n        onMouseOver={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1.1)';\n          if (micEnabled) {\n            button.style.boxShadow = '0 0 40px rgba(0, 255, 136, 0.6), 0 4px 20px rgba(0, 0, 0, 0.4)';\n          } else {\n            button.style.boxShadow = '0 0 30px rgba(36, 58, 82, 0.7), 0 4px 20px rgba(0, 0, 0, 0.4)';\n          }\n        }}\n        onMouseOut={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1)';\n          if (micEnabled) {\n            button.style.boxShadow = '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)';\n          } else {\n            button.style.boxShadow = '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)';\n          }\n        }}\n      >\n        <div style={{\n          width: '36px',\n          height: '36px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative'\n        }}>\n          <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mic-icon\">\n            <g className=\"mic-body\">\n              <path d=\"M12 15C13.6569 15 15 13.6569 15 12V6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6V12C9 13.6569 10.3431 15 12 15Z\" fill=\"white\"/>\n            </g>\n            <g className=\"mic-stand\">\n              <path d=\"M17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12H5C5 15.866 7.93452 19 11.5 19V22H12.5V19C16.0655 19 19 15.866 19 12H17Z\" fill=\"white\"/>\n            </g>\n          </svg>\n          {micEnabled && (\n            <>\n              <div style={{\n                position: 'absolute',\n                right: '-6px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                width: '4px',\n                height: '4px',\n                border: '1px solid rgba(0, 255, 136, 0.6)',\n                borderRadius: '50%',\n                animation: 'soundwave 2s ease-out infinite'\n              }} />\n              <div style={{\n                position: 'absolute',\n                right: '-10px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                width: '6px',\n                height: '6px',\n                border: '1px solid rgba(0, 255, 136, 0.4)',\n                borderRadius: '50%',\n                animation: 'soundwave 2s ease-out 0.3s infinite'\n              }} />\n            </>\n          )}\n        </div>\n      </button>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1\n      }}>\n        <div style={{\n          marginBottom: '30px',\n          filter: 'drop-shadow(0 0 50px rgba(255, 215, 0, 0.3))'\n        }}>\n          <MemoizedGlassyBlob\n            mode={mode}\n            intensity={intensity}\n            size={500}\n          />\n        </div>\n\n        <div style={{\n          color: 'rgba(255, 255, 255, 0.7)',\n          fontSize: '14px',\n          fontWeight: '400',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          letterSpacing: '2px',\n          opacity: 0.8\n        }}>\n          {mode === 'idle' && 'Ready'}\n          {mode === 'listening' && `Listening ${Math.round(audioLevel * 100)}%`}\n          {mode === 'thinking' && 'Processing...'}\n          {mode === 'speaking' && 'Speaking'}\n        </div>\n      </div>\n\n      <MemoizedChatPanel\n        isOpen={isChatOpen}\n        conversationHistory={conversationHistory}\n        currentResponse={currentResponse}\n        isWaitingForResponse={isWaitingForResponse}\n        onSendMessage={sendTextMessage}\n        userText={userText}\n        setUserText={setUserText}\n        isConnected={isConnected}\n        onClearHistory={clearConversation}\n        onClose={() => setIsChatOpen(false)}\n      />\n\n      <style>\n        {`\n          @keyframes blink {\n            0%, 50% { opacity: 1; }\n            51%, 100% { opacity: 0; }\n          }\n          \n          @keyframes slideIn {\n            from { transform: translateX(100%); }\n            to { transform: translateX(0); }\n          }\n          \n          @keyframes slideOut {\n            from { transform: translateX(0); }\n            to { transform: translateX(100%); }\n          }\n          \n          * {\n            box-sizing: border-box;\n          }\n          \n          ::-webkit-scrollbar {\n            width: 6px;\n          }\n          \n          ::-webkit-scrollbar-track {\n            background: rgba(255, 255, 255, 0.05);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb {\n            background: rgba(255, 255, 255, 0.2);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb:hover {\n            background: rgba(255, 255, 255, 0.3);\n          }\n          \n          @keyframes pulse {\n            from { \n              opacity: 0.6;\n              transform: translateX(-50%) scaleY(0.8);\n            }\n            to { \n              opacity: 1;\n              transform: translateX(-50%) scaleY(1.2);\n            }\n          }\n          \n          @keyframes soundwave {\n            0% {\n              transform: translateY(-50%) scale(0);\n              opacity: 1;\n            }\n            50% {\n              opacity: 0.5;\n            }\n            100% {\n              transform: translateY(-50%) scale(2);\n              opacity: 0;\n            }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default JarvisInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}