{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krish\\\\jarvis\\\\web_gui\\\\src\\\\components\\\\JarvisInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport GlassyBlob from './GlassyBlob';\nimport { useAudioAnalyzer } from './AudioAnalyzer';\nimport ChatPanel from './ChatPanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JarvisInterface = () => {\n  _s();\n  const [mode, setMode] = useState('idle');\n  const [intensity, setIntensity] = useState(0.5);\n  const [userText, setUserText] = useState('');\n  const [assistantText, setAssistantText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [micEnabled, setMicEnabled] = useState(true);\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\n  const wsRef = useRef(null);\n  const responseRef = useRef('');\n  const lastTextInputRef = useRef(null);\n\n  // Audio analyzer for real-time audio level monitoring\n  const {\n    startListening,\n    stopListening,\n    isListening,\n    audioLevel\n  } = useAudioAnalyzer(level => {\n    if (mode === 'listening') {\n      setIntensity(Math.max(0.1, level * 1.5)); // Scale and ensure minimum\n    }\n  });\n\n  // WebSocket connection to Python Jarvis backend\n  useEffect(() => {\n    connectToJarvis();\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      stopListening();\n    };\n  }, []);\n  const connectToJarvis = () => {\n    try {\n      wsRef.current = new WebSocket('ws://localhost:8765');\n      wsRef.current.onopen = () => {\n        console.log('Connected to Jarvis backend');\n        setIsConnected(true);\n        // Enable microphone by default when connecting\n        wsRef.current.send(JSON.stringify({\n          type: 'enable_mic'\n        }));\n      };\n      wsRef.current.onmessage = event => {\n        const data = JSON.parse(event.data);\n        handleJarvisMessage(data);\n      };\n      wsRef.current.onclose = () => {\n        console.log('Disconnected from Jarvis backend');\n        setIsConnected(false);\n        // Try to reconnect after 3 seconds\n        setTimeout(connectToJarvis, 3000);\n      };\n      wsRef.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Failed to connect to Jarvis:', error);\n      setIsConnected(false);\n    }\n  };\n  const handleJarvisMessage = data => {\n    switch (data.type) {\n      case 'user_text':\n        // Only add if this is NOT a duplicate of the last text input (i.e., this is voice input)\n        const isRecentTextInput = lastTextInputRef.current && lastTextInputRef.current.text === data.text && Date.now() - lastTextInputRef.current.timestamp < 2000; // Within 2 seconds\n\n        if (!isRecentTextInput) {\n          // This is voice input, add it to conversation\n          addToConversation('user', data.text);\n        }\n        setIsWaitingForResponse(true);\n        break;\n      case 'assistant_stream':\n        // First stream chunk received - stop loading animation\n        setIsWaitingForResponse(false);\n        responseRef.current += data.text;\n        setCurrentResponse(responseRef.current);\n        break;\n      case 'assistant_final':\n        setAssistantText(data.text);\n        addToConversation('assistant', data.text);\n        responseRef.current = '';\n        setCurrentResponse('');\n        setIsWaitingForResponse(false);\n        setMode('idle');\n        setIntensity(0.5);\n        break;\n      case 'mode_change':\n        setMode(data.mode);\n        if (data.mode === 'listening') {\n          setIntensity(0.3);\n          if (micEnabled) {\n            startListening();\n          }\n        } else if (data.mode === 'speaking') {\n          setIntensity(data.intensity || 0.8);\n          stopListening();\n        } else if (data.mode === 'idle') {\n          setIntensity(0.5);\n          // Re-enable microphone listening when going back to idle (if mic was enabled)\n          if (micEnabled) {\n            startListening();\n          }\n        } else {\n          setIntensity(0.5);\n          stopListening();\n        }\n        break;\n      case 'audio_level':\n        if (data.mode === 'speaking') {\n          setIntensity(Math.max(0.3, data.level * 1.2));\n        }\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  };\n  const lastMessageRef = useRef(null);\n  const addToConversation = (role, text) => {\n    // Create a unique message identifier\n    const messageId = `${role}-${text}-${Date.now()}`;\n\n    // Prevent only immediate duplicates (same message with same ID within 1 second)\n    if (lastMessageRef.current) {\n      const timeDiff = Date.now() - lastMessageRef.current.timestamp;\n      if (lastMessageRef.current.role === role && lastMessageRef.current.text === text && timeDiff < 1000) {\n        console.log('Preventing immediate duplicate message:', {\n          role,\n          text\n        });\n        return;\n      }\n    }\n\n    // Update last message reference\n    lastMessageRef.current = {\n      role,\n      text,\n      timestamp: Date.now()\n    };\n    setConversationHistory(prev => {\n      console.log('Adding message to conversation:', {\n        role,\n        text\n      });\n      return [...prev, {\n        role,\n        text,\n        timestamp: new Date().toLocaleTimeString(),\n        id: messageId\n      }];\n    });\n  };\n  const sendTextMessage = () => {\n    if (userText.trim() && wsRef.current && isConnected) {\n      const message = userText.trim();\n\n      // Track this as a text input to avoid duplicate from callback\n      lastTextInputRef.current = {\n        text: message,\n        timestamp: Date.now()\n      };\n\n      // Add text message immediately for instant feedback\n      addToConversation('user', message);\n\n      // Start loading animation immediately\n      setIsWaitingForResponse(true);\n\n      // Send to backend for processing\n      wsRef.current.send(JSON.stringify({\n        type: 'text_input',\n        text: message\n      }));\n\n      // Clear input immediately\n      setUserText('');\n\n      // Mode changes will be handled by backend messages\n    }\n  };\n  const toggleMicrophone = async () => {\n    if (!micEnabled) {\n      try {\n        await startListening();\n        setMicEnabled(true);\n        if (wsRef.current && isConnected) {\n          wsRef.current.send(JSON.stringify({\n            type: 'enable_mic'\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to enable microphone:', error);\n      }\n    } else {\n      stopListening();\n      setMicEnabled(false);\n      if (wsRef.current && isConnected) {\n        wsRef.current.send(JSON.stringify({\n          type: 'disable_mic'\n        }));\n      }\n    }\n  };\n  const clearConversation = () => {\n    setConversationHistory([]);\n    setCurrentResponse('');\n    responseRef.current = '';\n  };\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #000000 0%, #0a0a0a 100%)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontFamily: 'Inter, system-ui, sans-serif',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: isConnected ? '#00ff88' : '#ff4757',\n        fontSize: '12px',\n        fontWeight: '500',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px',\n        padding: '8px 12px',\n        background: 'rgba(0, 0, 0, 0.3)',\n        borderRadius: '20px',\n        backdropFilter: 'blur(10px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '8px',\n          height: '8px',\n          borderRadius: '50%',\n          background: isConnected ? '#00ff88' : '#ff4757',\n          boxShadow: `0 0 10px ${isConnected ? '#00ff88' : '#ff4757'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), isConnected ? 'Connected' : 'Disconnected']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsChatOpen(!isChatOpen),\n      title: \"Toggle Chat Panel\",\n      style: {\n        position: 'fixed',\n        bottom: '30px',\n        right: '30px',\n        width: '50px',\n        height: '50px',\n        borderRadius: '50%',\n        background: 'rgba(64, 158, 255, 0.2)',\n        border: '1px solid rgba(64, 158, 255, 0.4)',\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backdropFilter: 'blur(10px)',\n        transition: 'all 0.3s ease',\n        zIndex: 1000,\n        boxShadow: '0 0 20px rgba(64, 158, 255, 0.3)',\n        visibility: isChatOpen ? 'hidden' : 'visible',\n        opacity: isChatOpen ? 0 : 1,\n        pointerEvents: isChatOpen ? 'none' : 'auto'\n      },\n      onMouseOver: e => {\n        e.target.style.transform = 'scale(1.1)';\n        e.target.style.background = 'rgba(64, 158, 255, 0.3)';\n      },\n      onMouseOut: e => {\n        e.target.style.transform = 'scale(1)';\n        e.target.style.background = 'rgba(64, 158, 255, 0.2)';\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '24px',\n          height: '24px',\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M21 11.5C21.0034 12.8199 20.6951 14.1219 20.1 15.3C19.3944 16.7118 18.3098 17.8992 16.9674 18.7293C15.6251 19.5594 14.0782 19.9994 12.5 20C11.1801 20.0034 9.87812 19.6951 8.7 19.1L3 21L4.9 15.3C4.30493 14.1219 3.99656 12.8199 4 11.5C4.00061 9.92179 4.44061 8.37488 5.27072 7.03258C6.10083 5.69028 7.28825 4.60557 8.7 3.90003C9.87812 3.30496 11.1801 2.99659 12.5 3H13C15.0843 3.11499 17.053 3.99476 18.5291 5.47088C20.0052 6.947 20.885 8.91568 21 11V11.5Z\",\n            stroke: \"#409EFF\",\n            strokeWidth: \"1.5\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M8 11H16\",\n            stroke: \"#409EFF\",\n            strokeWidth: \"1.5\",\n            strokeLinecap: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M8 15H13\",\n            stroke: \"#409EFF\",\n            strokeWidth: \"1.5\",\n            strokeLinecap: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMicrophone,\n      title: micEnabled ? \"Disable Microphone\" : \"Enable Microphone\",\n      style: {\n        position: 'fixed',\n        bottom: '30px',\n        left: 'calc(50vw - 25px)',\n        width: '50px',\n        height: '50px',\n        borderRadius: '50%',\n        background: micEnabled ? 'linear-gradient(135deg, #00ff88, #00d4aa)' : 'rgba(36, 58, 82, 0.8)',\n        border: micEnabled ? '2px solid rgba(0, 255, 136, 0.4)' : '2px solid rgba(255, 255, 255, 0.2)',\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backdropFilter: 'blur(10px)',\n        transition: 'all 0.3s ease',\n        boxShadow: micEnabled ? '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)' : '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)',\n        zIndex: 1000\n      },\n      onMouseOver: e => {\n        e.target.style.transform = 'scale(1.1)';\n      },\n      onMouseOut: e => {\n        e.target.style.transform = 'scale(1)';\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '24px',\n          height: '24px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"mic-icon\",\n          children: [/*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"mic-body\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 15C13.6569 15 15 13.6569 15 12V6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6V12C9 13.6569 10.3431 15 12 15Z\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"mic-stand\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12H5C5 15.866 7.93452 19 11.5 19V22H12.5V19C16.0655 19 19 15.866 19 12H17Z\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), micEnabled && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '-4px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              width: '3px',\n              height: '3px',\n              border: '1px solid rgba(0, 255, 136, 0.6)',\n              borderRadius: '50%',\n              animation: 'soundwave 2s ease-out infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '-8px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              width: '5px',\n              height: '5px',\n              border: '1px solid rgba(0, 255, 136, 0.4)',\n              borderRadius: '50%',\n              animation: 'soundwave 2s ease-out 0.3s infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '30px',\n          filter: 'drop-shadow(0 0 50px rgba(255, 215, 0, 0.3))'\n        },\n        children: /*#__PURE__*/_jsxDEV(GlassyBlob, {\n          mode: mode,\n          intensity: intensity,\n          size: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'rgba(255, 255, 255, 0.7)',\n          fontSize: '14px',\n          fontWeight: '400',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          letterSpacing: '2px',\n          opacity: 0.8\n        },\n        children: [mode === 'idle' && 'Ready', mode === 'listening' && `Listening ${Math.round(audioLevel * 100)}%`, mode === 'thinking' && 'Processing...', mode === 'speaking' && 'Speaking']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatPanel, {\n      isOpen: isChatOpen,\n      conversationHistory: conversationHistory,\n      currentResponse: currentResponse,\n      isWaitingForResponse: isWaitingForResponse,\n      onSendMessage: sendTextMessage,\n      userText: userText,\n      setUserText: setUserText,\n      isConnected: isConnected,\n      onClearHistory: clearConversation,\n      onClose: () => setIsChatOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n          \n          @keyframes blink {\n            0%, 50% { opacity: 1; }\n            51%, 100% { opacity: 0; }\n          }\n          \n          @keyframes slideIn {\n            from { transform: translateX(100%); }\n            to { transform: translateX(0); }\n          }\n          \n          @keyframes slideOut {\n            from { transform: translateX(0); }\n            to { transform: translateX(100%); }\n          }\n          \n          * {\n            box-sizing: border-box;\n          }\n          \n          ::-webkit-scrollbar {\n            width: 6px;\n          }\n          \n          ::-webkit-scrollbar-track {\n            background: rgba(255, 255, 255, 0.05);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb {\n            background: rgba(255, 255, 255, 0.2);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb:hover {\n            background: rgba(255, 255, 255, 0.3);\n          }\n          \n          @keyframes pulse {\n            from { \n              opacity: 0.6;\n              transform: translateX(-50%) scaleY(0.8);\n            }\n            to { \n              opacity: 1;\n              transform: translateX(-50%) scaleY(1.2);\n            }\n          }\n          \n          @keyframes soundwave {\n            0% {\n              transform: translateY(-50%) scale(0);\n              opacity: 1;\n            }\n            50% {\n              opacity: 0.5;\n            }\n            100% {\n              transform: translateY(-50%) scale(2);\n              opacity: 0;\n            }\n          }\n          .mic-icon:hover .mic-body {\n            transform: translateY(-2px);\n            transition: transform 0.2s ease-in-out;\n          }\n          .mic-icon:hover .mic-stand {\n            transform: translateY(2px);\n            transition: transform 0.2s ease-in-out;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(JarvisInterface, \"ER4TbUakQ+Hy+n/MD/FhBftQlsU=\", false, function () {\n  return [useAudioAnalyzer];\n});\n_c = JarvisInterface;\nexport default JarvisInterface;\nvar _c;\n$RefreshReg$(_c, \"JarvisInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GlassyBlob","useAudioAnalyzer","ChatPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","JarvisInterface","_s","mode","setMode","intensity","setIntensity","userText","setUserText","assistantText","setAssistantText","isConnected","setIsConnected","conversationHistory","setConversationHistory","currentResponse","setCurrentResponse","micEnabled","setMicEnabled","isWaitingForResponse","setIsWaitingForResponse","wsRef","responseRef","lastTextInputRef","startListening","stopListening","isListening","audioLevel","level","Math","max","connectToJarvis","current","close","WebSocket","onopen","console","log","send","JSON","stringify","type","onmessage","event","data","parse","handleJarvisMessage","onclose","setTimeout","onerror","error","isRecentTextInput","text","Date","now","timestamp","addToConversation","lastMessageRef","role","messageId","timeDiff","prev","toLocaleTimeString","id","sendTextMessage","trim","message","toggleMicrophone","clearConversation","isChatOpen","setIsChatOpen","style","minHeight","background","display","alignItems","justifyContent","fontFamily","position","overflow","children","top","left","color","fontSize","fontWeight","gap","padding","borderRadius","backdropFilter","width","height","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","bottom","right","border","cursor","transition","zIndex","visibility","opacity","pointerEvents","onMouseOver","e","target","transform","onMouseOut","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","animation","flexDirection","marginBottom","filter","size","textAlign","textTransform","letterSpacing","round","isOpen","onSendMessage","onClearHistory","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Krish/jarvis/web_gui/src/components/JarvisInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport GlassyBlob from './GlassyBlob';\nimport { useAudioAnalyzer } from './AudioAnalyzer';\nimport ChatPanel from './ChatPanel';\n\nconst JarvisInterface = () => {\n  const [mode, setMode] = useState('idle');\n  const [intensity, setIntensity] = useState(0.5);\n  const [userText, setUserText] = useState('');\n  const [assistantText, setAssistantText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [micEnabled, setMicEnabled] = useState(true);\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\n\n  const wsRef = useRef(null);\n  const responseRef = useRef('');\n  const lastTextInputRef = useRef(null);\n\n  // Audio analyzer for real-time audio level monitoring\n  const { startListening, stopListening, isListening, audioLevel } = useAudioAnalyzer(\n    (level) => {\n      if (mode === 'listening') {\n        setIntensity(Math.max(0.1, level * 1.5)); // Scale and ensure minimum\n      }\n    }\n  );\n\n  // WebSocket connection to Python Jarvis backend\n  useEffect(() => {\n    connectToJarvis();\n\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      stopListening();\n    };\n  }, []);\n\n  const connectToJarvis = () => {\n    try {\n      wsRef.current = new WebSocket('ws://localhost:8765');\n\n      wsRef.current.onopen = () => {\n        console.log('Connected to Jarvis backend');\n        setIsConnected(true);\n        // Enable microphone by default when connecting\n        wsRef.current.send(JSON.stringify({ type: 'enable_mic' }));\n      };\n\n      wsRef.current.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        handleJarvisMessage(data);\n      };\n\n      wsRef.current.onclose = () => {\n        console.log('Disconnected from Jarvis backend');\n        setIsConnected(false);\n        // Try to reconnect after 3 seconds\n        setTimeout(connectToJarvis, 3000);\n      };\n\n      wsRef.current.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Failed to connect to Jarvis:', error);\n      setIsConnected(false);\n    }\n  };\n\n  const handleJarvisMessage = (data) => {\n    switch (data.type) {\n      case 'user_text':\n        // Only add if this is NOT a duplicate of the last text input (i.e., this is voice input)\n        const isRecentTextInput = lastTextInputRef.current &&\n          lastTextInputRef.current.text === data.text &&\n          (Date.now() - lastTextInputRef.current.timestamp) < 2000; // Within 2 seconds\n\n        if (!isRecentTextInput) {\n          // This is voice input, add it to conversation\n          addToConversation('user', data.text);\n        }\n        setIsWaitingForResponse(true);\n        break;\n\n      case 'assistant_stream':\n        // First stream chunk received - stop loading animation\n        setIsWaitingForResponse(false);\n        responseRef.current += data.text;\n        setCurrentResponse(responseRef.current);\n        break;\n\n      case 'assistant_final':\n        setAssistantText(data.text);\n        addToConversation('assistant', data.text);\n        responseRef.current = '';\n        setCurrentResponse('');\n        setIsWaitingForResponse(false);\n        setMode('idle');\n        setIntensity(0.5);\n        break;\n\n      case 'mode_change':\n        setMode(data.mode);\n        if (data.mode === 'listening') {\n          setIntensity(0.3);\n          if (micEnabled) {\n            startListening();\n          }\n        } else if (data.mode === 'speaking') {\n          setIntensity(data.intensity || 0.8);\n          stopListening();\n        } else if (data.mode === 'idle') {\n          setIntensity(0.5);\n          // Re-enable microphone listening when going back to idle (if mic was enabled)\n          if (micEnabled) {\n            startListening();\n          }\n        } else {\n          setIntensity(0.5);\n          stopListening();\n        }\n        break;\n\n      case 'audio_level':\n        if (data.mode === 'speaking') {\n          setIntensity(Math.max(0.3, data.level * 1.2));\n        }\n        break;\n\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  };\n\n  const lastMessageRef = useRef(null);\n\n  const addToConversation = (role, text) => {\n    // Create a unique message identifier\n    const messageId = `${role}-${text}-${Date.now()}`;\n\n    // Prevent only immediate duplicates (same message with same ID within 1 second)\n    if (lastMessageRef.current) {\n      const timeDiff = Date.now() - lastMessageRef.current.timestamp;\n      if (lastMessageRef.current.role === role &&\n        lastMessageRef.current.text === text &&\n        timeDiff < 1000) {\n        console.log('Preventing immediate duplicate message:', { role, text });\n        return;\n      }\n    }\n\n    // Update last message reference\n    lastMessageRef.current = { role, text, timestamp: Date.now() };\n\n    setConversationHistory(prev => {\n      console.log('Adding message to conversation:', { role, text });\n      return [...prev, {\n        role,\n        text,\n        timestamp: new Date().toLocaleTimeString(),\n        id: messageId\n      }];\n    });\n  };\n\n  const sendTextMessage = () => {\n    if (userText.trim() && wsRef.current && isConnected) {\n      const message = userText.trim();\n\n      // Track this as a text input to avoid duplicate from callback\n      lastTextInputRef.current = { text: message, timestamp: Date.now() };\n\n      // Add text message immediately for instant feedback\n      addToConversation('user', message);\n\n      // Start loading animation immediately\n      setIsWaitingForResponse(true);\n\n      // Send to backend for processing\n      wsRef.current.send(JSON.stringify({\n        type: 'text_input',\n        text: message\n      }));\n\n      // Clear input immediately\n      setUserText('');\n\n      // Mode changes will be handled by backend messages\n    }\n  };\n\n  const toggleMicrophone = async () => {\n    if (!micEnabled) {\n      try {\n        await startListening();\n        setMicEnabled(true);\n        if (wsRef.current && isConnected) {\n          wsRef.current.send(JSON.stringify({ type: 'enable_mic' }));\n        }\n      } catch (error) {\n        console.error('Failed to enable microphone:', error);\n      }\n    } else {\n      stopListening();\n      setMicEnabled(false);\n      if (wsRef.current && isConnected) {\n        wsRef.current.send(JSON.stringify({ type: 'disable_mic' }));\n      }\n    }\n  };\n\n  const clearConversation = () => {\n    setConversationHistory([]);\n    setCurrentResponse('');\n    responseRef.current = '';\n  };\n\n  const [isChatOpen, setIsChatOpen] = useState(false);\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #000000 0%, #0a0a0a 100%)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontFamily: 'Inter, system-ui, sans-serif',\n      position: 'relative',\n      overflow: 'hidden'\n    }}>\n      {/* Connection Status */}\n      <div style={{\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: isConnected ? '#00ff88' : '#ff4757',\n        fontSize: '12px',\n        fontWeight: '500',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px',\n        padding: '8px 12px',\n        background: 'rgba(0, 0, 0, 0.3)',\n        borderRadius: '20px',\n        backdropFilter: 'blur(10px)'\n      }}>\n        <div style={{\n          width: '8px',\n          height: '8px',\n          borderRadius: '50%',\n          background: isConnected ? '#00ff88' : '#ff4757',\n          boxShadow: `0 0 10px ${isConnected ? '#00ff88' : '#ff4757'}`\n        }}></div>\n        {isConnected ? 'Connected' : 'Disconnected'}\n      </div>\n\n      {/* Chat Toggle Button - Bottom Right */}\n      <button\n        onClick={() => setIsChatOpen(!isChatOpen)}\n        title=\"Toggle Chat Panel\"\n        style={{\n          position: 'fixed',\n          bottom: '30px',\n          right: '30px',\n          width: '50px',\n          height: '50px',\n          borderRadius: '50%',\n          background: 'rgba(64, 158, 255, 0.2)',\n          border: '1px solid rgba(64, 158, 255, 0.4)',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backdropFilter: 'blur(10px)',\n          transition: 'all 0.3s ease',\n          zIndex: 1000,\n          boxShadow: '0 0 20px rgba(64, 158, 255, 0.3)',\n          visibility: isChatOpen ? 'hidden' : 'visible',\n          opacity: isChatOpen ? 0 : 1,\n          pointerEvents: isChatOpen ? 'none' : 'auto'\n        }}\n        onMouseOver={(e) => {\n          e.target.style.transform = 'scale(1.1)';\n          e.target.style.background = 'rgba(64, 158, 255, 0.3)';\n        }}\n        onMouseOut={(e) => {\n          e.target.style.transform = 'scale(1)';\n          e.target.style.background = 'rgba(64, 158, 255, 0.2)';\n        }}\n      >\n        <div style={{\n          width: '24px',\n          height: '24px',\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n          {/* Professional Chat Icon */}\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M21 11.5C21.0034 12.8199 20.6951 14.1219 20.1 15.3C19.3944 16.7118 18.3098 17.8992 16.9674 18.7293C15.6251 19.5594 14.0782 19.9994 12.5 20C11.1801 20.0034 9.87812 19.6951 8.7 19.1L3 21L4.9 15.3C4.30493 14.1219 3.99656 12.8199 4 11.5C4.00061 9.92179 4.44061 8.37488 5.27072 7.03258C6.10083 5.69028 7.28825 4.60557 8.7 3.90003C9.87812 3.30496 11.1801 2.99659 12.5 3H13C15.0843 3.11499 17.053 3.99476 18.5291 5.47088C20.0052 6.947 20.885 8.91568 21 11V11.5Z\" \n                  stroke=\"#409EFF\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M8 11H16\" stroke=\"#409EFF\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n            <path d=\"M8 15H13\" stroke=\"#409EFF\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n          </svg>\n        </div>\n      </button>\n\n      {/* Professional Microphone Button - Bottom Center */}\n      <button\n        onClick={toggleMicrophone}\n        title={micEnabled ? \"Disable Microphone\" : \"Enable Microphone\"}\n        style={{\n          position: 'fixed',\n          bottom: '30px',\n          left: 'calc(50vw - 25px)',\n          width: '50px',\n          height: '50px',\n          borderRadius: '50%',\n          background: micEnabled\n            ? 'linear-gradient(135deg, #00ff88, #00d4aa)'\n            : 'rgba(36, 58, 82, 0.8)',\n          border: micEnabled\n            ? '2px solid rgba(0, 255, 136, 0.4)'\n            : '2px solid rgba(255, 255, 255, 0.2)',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backdropFilter: 'blur(10px)',\n          transition: 'all 0.3s ease',\n          boxShadow: micEnabled\n            ? '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)'\n            : '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)',\n          zIndex: 1000\n        }}\n        onMouseOver={(e) => {\n          e.target.style.transform = 'scale(1.1)';\n        }}\n        onMouseOut={(e) => {\n          e.target.style.transform = 'scale(1)';\n        }}\n      >\n        <div style={{\n          width: '24px',\n          height: '24px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative'\n        }}>\n          {/* Professional Microphone Icon */}\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mic-icon\">\n            <g className=\"mic-body\">\n              <path d=\"M12 15C13.6569 15 15 13.6569 15 12V6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6V12C9 13.6569 10.3431 15 12 15Z\" fill=\"white\"/>\n            </g>\n            <g className=\"mic-stand\">\n              <path d=\"M17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12H5C5 15.866 7.93452 19 11.5 19V22H12.5V19C16.0655 19 19 15.866 19 12H17Z\" fill=\"white\"/>\n            </g>\n          </svg>\n\n          {/* Sound waves when listening */}\n          {micEnabled && (\n            <>\n              <div style={{\n                position: 'absolute',\n                right: '-4px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                width: '3px',\n                height: '3px',\n                border: '1px solid rgba(0, 255, 136, 0.6)',\n                borderRadius: '50%',\n                animation: 'soundwave 2s ease-out infinite'\n              }} />\n              <div style={{\n                position: 'absolute',\n                right: '-8px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                width: '5px',\n                height: '5px',\n                border: '1px solid rgba(0, 255, 136, 0.4)',\n                borderRadius: '50%',\n                animation: 'soundwave 2s ease-out 0.3s infinite'\n              }} />\n            </>\n          )}\n        </div>\n      </button>\n\n      {/* Main Blob Area */}\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1\n      }}>\n        {/* Glassy Blob without circle */}\n        <div style={{\n          marginBottom: '30px',\n          filter: 'drop-shadow(0 0 50px rgba(255, 215, 0, 0.3))'\n        }}>\n          <GlassyBlob\n            mode={mode}\n            intensity={intensity}\n            size={500}\n          />\n        </div>\n\n        {/* Minimalist Status Display */}\n        <div style={{\n          color: 'rgba(255, 255, 255, 0.7)',\n          fontSize: '14px',\n          fontWeight: '400',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          letterSpacing: '2px',\n          opacity: 0.8\n        }}>\n          {mode === 'idle' && 'Ready'}\n          {mode === 'listening' && `Listening ${Math.round(audioLevel * 100)}%`}\n          {mode === 'thinking' && 'Processing...'}\n          {mode === 'speaking' && 'Speaking'}\n        </div>\n      </div>\n\n      {/* Slide-out Chat Panel */}\n      <ChatPanel\n        isOpen={isChatOpen}\n        conversationHistory={conversationHistory}\n        currentResponse={currentResponse}\n        isWaitingForResponse={isWaitingForResponse}\n        onSendMessage={sendTextMessage}\n        userText={userText}\n        setUserText={setUserText}\n        isConnected={isConnected}\n        onClearHistory={clearConversation}\n        onClose={() => setIsChatOpen(false)}\n      />\n\n      {/* Global Styles */}\n      <style>\n        {`\n          @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n          \n          @keyframes blink {\n            0%, 50% { opacity: 1; }\n            51%, 100% { opacity: 0; }\n          }\n          \n          @keyframes slideIn {\n            from { transform: translateX(100%); }\n            to { transform: translateX(0); }\n          }\n          \n          @keyframes slideOut {\n            from { transform: translateX(0); }\n            to { transform: translateX(100%); }\n          }\n          \n          * {\n            box-sizing: border-box;\n          }\n          \n          ::-webkit-scrollbar {\n            width: 6px;\n          }\n          \n          ::-webkit-scrollbar-track {\n            background: rgba(255, 255, 255, 0.05);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb {\n            background: rgba(255, 255, 255, 0.2);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb:hover {\n            background: rgba(255, 255, 255, 0.3);\n          }\n          \n          @keyframes pulse {\n            from { \n              opacity: 0.6;\n              transform: translateX(-50%) scaleY(0.8);\n            }\n            to { \n              opacity: 1;\n              transform: translateX(-50%) scaleY(1.2);\n            }\n          }\n          \n          @keyframes soundwave {\n            0% {\n              transform: translateY(-50%) scale(0);\n              opacity: 1;\n            }\n            50% {\n              opacity: 0.5;\n            }\n            100% {\n              transform: translateY(-50%) scale(2);\n              opacity: 0;\n            }\n          }\n          .mic-icon:hover .mic-body {\n            transform: translateY(-2px);\n            transition: transform 0.2s ease-in-out;\n          }\n          .mic-icon:hover .mic-stand {\n            transform: translateY(2px);\n            transition: transform 0.2s ease-in-out;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default JarvisInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}