{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krish\\\\jarvis\\\\web_gui\\\\src\\\\components\\\\JarvisInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport GlassyBlob from './GlassyBlob';\nimport { useAudioAnalyzer } from './AudioAnalyzer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JarvisInterface = () => {\n  _s();\n  const [mode, setMode] = useState('idle');\n  const [intensity, setIntensity] = useState(0.5);\n  const [userText, setUserText] = useState('');\n  const [assistantText, setAssistantText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [micEnabled, setMicEnabled] = useState(false);\n  const wsRef = useRef(null);\n  const responseRef = useRef('');\n\n  // Audio analyzer for real-time audio level monitoring\n  const {\n    startListening,\n    stopListening,\n    isListening,\n    audioLevel\n  } = useAudioAnalyzer(level => {\n    if (mode === 'listening') {\n      setIntensity(Math.max(0.1, level * 1.5)); // Scale and ensure minimum\n    }\n  });\n\n  // WebSocket connection to Python Jarvis backend\n  useEffect(() => {\n    connectToJarvis();\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      stopListening();\n    };\n  }, []);\n  const connectToJarvis = () => {\n    try {\n      wsRef.current = new WebSocket('ws://localhost:8765');\n      wsRef.current.onopen = () => {\n        console.log('Connected to Jarvis backend');\n        setIsConnected(true);\n      };\n      wsRef.current.onmessage = event => {\n        const data = JSON.parse(event.data);\n        handleJarvisMessage(data);\n      };\n      wsRef.current.onclose = () => {\n        console.log('Disconnected from Jarvis backend');\n        setIsConnected(false);\n        // Try to reconnect after 3 seconds\n        setTimeout(connectToJarvis, 3000);\n      };\n      wsRef.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Failed to connect to Jarvis:', error);\n      setIsConnected(false);\n    }\n  };\n  const handleJarvisMessage = data => {\n    switch (data.type) {\n      case 'user_text':\n        setUserText(data.text);\n        addToConversation('user', data.text);\n        break;\n      case 'assistant_stream':\n        responseRef.current += data.text;\n        setCurrentResponse(responseRef.current);\n        break;\n      case 'assistant_final':\n        setAssistantText(data.text);\n        addToConversation('assistant', data.text);\n        responseRef.current = '';\n        setCurrentResponse('');\n        setMode('idle');\n        setIntensity(0.5);\n        break;\n      case 'mode_change':\n        setMode(data.mode);\n        if (data.mode === 'listening') {\n          setIntensity(0.3);\n          if (micEnabled) {\n            startListening();\n          }\n        } else if (data.mode === 'speaking') {\n          setIntensity(data.intensity || 0.8);\n          stopListening();\n        } else {\n          setIntensity(0.5);\n          stopListening();\n        }\n        break;\n      case 'audio_level':\n        if (data.mode === 'speaking') {\n          setIntensity(Math.max(0.3, data.level * 1.2));\n        }\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  };\n  const addToConversation = (role, text) => {\n    setConversationHistory(prev => [...prev, {\n      role,\n      text,\n      timestamp: new Date().toLocaleTimeString()\n    }]);\n  };\n  const sendTextMessage = () => {\n    if (userText.trim() && wsRef.current && isConnected) {\n      wsRef.current.send(JSON.stringify({\n        type: 'text_input',\n        text: userText.trim()\n      }));\n      setMode('thinking');\n      setTimeout(() => setMode('speaking'), 500);\n      setUserText('');\n    }\n  };\n  const toggleMicrophone = async () => {\n    if (!micEnabled) {\n      try {\n        await startListening();\n        setMicEnabled(true);\n        if (wsRef.current && isConnected) {\n          wsRef.current.send(JSON.stringify({\n            type: 'enable_mic'\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to enable microphone:', error);\n      }\n    } else {\n      stopListening();\n      setMicEnabled(false);\n      if (wsRef.current && isConnected) {\n        wsRef.current.send(JSON.stringify({\n          type: 'disable_mic'\n        }));\n      }\n    }\n  };\n  const clearConversation = () => {\n    setConversationHistory([]);\n    setCurrentResponse('');\n    responseRef.current = '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #000000 0%, #1a1a1a 100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        color: isConnected ? '#4CAF50' : '#FF5722',\n        fontSize: '14px',\n        fontWeight: 'bold'\n      },\n      children: isConnected ? '● Connected' : '● Disconnected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#FFD700',\n        fontSize: '48px',\n        fontWeight: 'bold',\n        marginBottom: '20px',\n        textShadow: '0 0 20px rgba(255, 215, 0, 0.5)',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: \"J.A.R.V.I.S\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(GlassyBlob, {\n        mode: mode,\n        intensity: intensity,\n        size: 450\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#FFD700',\n        fontSize: '18px',\n        marginBottom: '20px',\n        textAlign: 'center',\n        minHeight: '25px'\n      },\n      children: [\"Status: \", mode.charAt(0).toUpperCase() + mode.slice(1), mode === 'listening' && ` (${Math.round(audioLevel * 100)}%)`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        maxWidth: '600px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userText,\n          onChange: e => setUserText(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && sendTextMessage(),\n          placeholder: \"Type your message to Jarvis...\",\n          style: {\n            flex: 1,\n            padding: '12px',\n            fontSize: '16px',\n            border: '2px solid #FFD700',\n            borderRadius: '25px',\n            background: 'rgba(0, 0, 0, 0.8)',\n            color: 'white',\n            outline: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendTextMessage,\n          disabled: !userText.trim() || !isConnected,\n          style: {\n            padding: '12px 24px',\n            fontSize: '16px',\n            background: isConnected && userText.trim() ? '#FFD700' : '#666',\n            color: 'black',\n            border: 'none',\n            borderRadius: '25px',\n            cursor: isConnected && userText.trim() ? 'pointer' : 'not-allowed',\n            fontWeight: 'bold'\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMicrophone,\n          style: {\n            padding: '10px 20px',\n            background: micEnabled ? '#4CAF50' : '#666',\n            color: 'white',\n            border: 'none',\n            borderRadius: '20px',\n            cursor: 'pointer',\n            fontWeight: 'bold'\n          },\n          children: [\"\\uD83C\\uDFA4 \", micEnabled ? 'Mic ON' : 'Mic OFF']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearConversation,\n          style: {\n            padding: '10px 20px',\n            background: '#FF5722',\n            color: 'white',\n            border: 'none',\n            borderRadius: '20px',\n            cursor: 'pointer',\n            fontWeight: 'bold'\n          },\n          children: \"Clear History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), currentResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        maxWidth: '600px',\n        padding: '15px',\n        background: 'rgba(255, 215, 0, 0.1)',\n        border: '1px solid #FFD700',\n        borderRadius: '10px',\n        color: 'white',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Jarvis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), \" \", currentResponse, /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          animation: 'blink 1s infinite'\n        },\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        maxWidth: '600px',\n        maxHeight: '300px',\n        overflowY: 'auto',\n        padding: '10px',\n        background: 'rgba(255, 255, 255, 0.05)',\n        borderRadius: '10px',\n        border: '1px solid #333'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#FFD700',\n          marginTop: 0\n        },\n        children: \"Conversation History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), conversationHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#666',\n          fontStyle: 'italic'\n        },\n        children: \"No conversation yet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this) : conversationHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px',\n          padding: '10px',\n          borderRadius: '5px',\n          background: message.role === 'user' ? 'rgba(100, 150, 255, 0.1)' : 'rgba(255, 215, 0, 0.1)',\n          border: `1px solid ${message.role === 'user' ? '#6496FF' : '#FFD700'}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#888',\n            marginBottom: '5px'\n          },\n          children: [message.role === 'user' ? '👤 You' : '🤖 Jarvis', \" - \", message.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'white'\n          },\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes blink {\n            0%, 50% { opacity: 1; }\n            51%, 100% { opacity: 0; }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(JarvisInterface, \"tVSwiyeFjPuLPq3Xw16RwzUhl24=\", false, function () {\n  return [useAudioAnalyzer];\n});\n_c = JarvisInterface;\nexport default JarvisInterface;\nvar _c;\n$RefreshReg$(_c, \"JarvisInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GlassyBlob","useAudioAnalyzer","jsxDEV","_jsxDEV","JarvisInterface","_s","mode","setMode","intensity","setIntensity","userText","setUserText","assistantText","setAssistantText","isConnected","setIsConnected","conversationHistory","setConversationHistory","currentResponse","setCurrentResponse","micEnabled","setMicEnabled","wsRef","responseRef","startListening","stopListening","isListening","audioLevel","level","Math","max","connectToJarvis","current","close","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","handleJarvisMessage","onclose","setTimeout","onerror","error","type","text","addToConversation","role","prev","timestamp","Date","toLocaleTimeString","sendTextMessage","trim","send","stringify","toggleMicrophone","clearConversation","style","minHeight","background","display","flexDirection","alignItems","justifyContent","padding","fontFamily","children","position","top","right","color","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","textShadow","size","textAlign","charAt","toUpperCase","slice","round","width","maxWidth","gap","value","onChange","e","target","onKeyPress","key","placeholder","flex","border","borderRadius","outline","onClick","disabled","cursor","animation","maxHeight","overflowY","marginTop","length","fontStyle","map","message","index","_c","$RefreshReg$"],"sources":["C:/Users/Krish/jarvis/web_gui/src/components/JarvisInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport GlassyBlob from './GlassyBlob';\r\nimport { useAudioAnalyzer } from './AudioAnalyzer';\r\n\r\nconst JarvisInterface = () => {\r\n  const [mode, setMode] = useState('idle');\r\n  const [intensity, setIntensity] = useState(0.5);\r\n  const [userText, setUserText] = useState('');\r\n  const [assistantText, setAssistantText] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [conversationHistory, setConversationHistory] = useState([]);\r\n  const [currentResponse, setCurrentResponse] = useState('');\r\n  const [micEnabled, setMicEnabled] = useState(false);\r\n  \r\n  const wsRef = useRef(null);\r\n  const responseRef = useRef('');\r\n\r\n  // Audio analyzer for real-time audio level monitoring\r\n  const { startListening, stopListening, isListening, audioLevel } = useAudioAnalyzer(\r\n    (level) => {\r\n      if (mode === 'listening') {\r\n        setIntensity(Math.max(0.1, level * 1.5)); // Scale and ensure minimum\r\n      }\r\n    }\r\n  );\r\n\r\n  // WebSocket connection to Python Jarvis backend\r\n  useEffect(() => {\r\n    connectToJarvis();\r\n    \r\n    return () => {\r\n      if (wsRef.current) {\r\n        wsRef.current.close();\r\n      }\r\n      stopListening();\r\n    };\r\n  }, []);\r\n\r\n  const connectToJarvis = () => {\r\n    try {\r\n      wsRef.current = new WebSocket('ws://localhost:8765');\r\n      \r\n      wsRef.current.onopen = () => {\r\n        console.log('Connected to Jarvis backend');\r\n        setIsConnected(true);\r\n      };\r\n\r\n      wsRef.current.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        handleJarvisMessage(data);\r\n      };\r\n\r\n      wsRef.current.onclose = () => {\r\n        console.log('Disconnected from Jarvis backend');\r\n        setIsConnected(false);\r\n        // Try to reconnect after 3 seconds\r\n        setTimeout(connectToJarvis, 3000);\r\n      };\r\n\r\n      wsRef.current.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        setIsConnected(false);\r\n      };\r\n    } catch (error) {\r\n      console.error('Failed to connect to Jarvis:', error);\r\n      setIsConnected(false);\r\n    }\r\n  };\r\n\r\n  const handleJarvisMessage = (data) => {\r\n    switch (data.type) {\r\n      case 'user_text':\r\n        setUserText(data.text);\r\n        addToConversation('user', data.text);\r\n        break;\r\n        \r\n      case 'assistant_stream':\r\n        responseRef.current += data.text;\r\n        setCurrentResponse(responseRef.current);\r\n        break;\r\n        \r\n      case 'assistant_final':\r\n        setAssistantText(data.text);\r\n        addToConversation('assistant', data.text);\r\n        responseRef.current = '';\r\n        setCurrentResponse('');\r\n        setMode('idle');\r\n        setIntensity(0.5);\r\n        break;\r\n        \r\n      case 'mode_change':\r\n        setMode(data.mode);\r\n        if (data.mode === 'listening') {\r\n          setIntensity(0.3);\r\n          if (micEnabled) {\r\n            startListening();\r\n          }\r\n        } else if (data.mode === 'speaking') {\r\n          setIntensity(data.intensity || 0.8);\r\n          stopListening();\r\n        } else {\r\n          setIntensity(0.5);\r\n          stopListening();\r\n        }\r\n        break;\r\n        \r\n      case 'audio_level':\r\n        if (data.mode === 'speaking') {\r\n          setIntensity(Math.max(0.3, data.level * 1.2));\r\n        }\r\n        break;\r\n        \r\n      default:\r\n        console.log('Unknown message type:', data.type);\r\n    }\r\n  };\r\n\r\n  const addToConversation = (role, text) => {\r\n    setConversationHistory(prev => [...prev, { role, text, timestamp: new Date().toLocaleTimeString() }]);\r\n  };\r\n\r\n  const sendTextMessage = () => {\r\n    if (userText.trim() && wsRef.current && isConnected) {\r\n      wsRef.current.send(JSON.stringify({\r\n        type: 'text_input',\r\n        text: userText.trim()\r\n      }));\r\n      \r\n      setMode('thinking');\r\n      setTimeout(() => setMode('speaking'), 500);\r\n      setUserText('');\r\n    }\r\n  };\r\n\r\n  const toggleMicrophone = async () => {\r\n    if (!micEnabled) {\r\n      try {\r\n        await startListening();\r\n        setMicEnabled(true);\r\n        if (wsRef.current && isConnected) {\r\n          wsRef.current.send(JSON.stringify({ type: 'enable_mic' }));\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to enable microphone:', error);\r\n      }\r\n    } else {\r\n      stopListening();\r\n      setMicEnabled(false);\r\n      if (wsRef.current && isConnected) {\r\n        wsRef.current.send(JSON.stringify({ type: 'disable_mic' }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearConversation = () => {\r\n    setConversationHistory([]);\r\n    setCurrentResponse('');\r\n    responseRef.current = '';\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(135deg, #000000 0%, #1a1a1a 100%)',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      padding: '20px',\r\n      fontFamily: 'Arial, sans-serif'\r\n    }}>\r\n      {/* Connection Status */}\r\n      <div style={{\r\n        position: 'absolute',\r\n        top: '20px',\r\n        right: '20px',\r\n        color: isConnected ? '#4CAF50' : '#FF5722',\r\n        fontSize: '14px',\r\n        fontWeight: 'bold'\r\n      }}>\r\n        {isConnected ? '● Connected' : '● Disconnected'}\r\n      </div>\r\n\r\n      {/* Jarvis Title */}\r\n      <div style={{\r\n        color: '#FFD700',\r\n        fontSize: '48px',\r\n        fontWeight: 'bold',\r\n        marginBottom: '20px',\r\n        textShadow: '0 0 20px rgba(255, 215, 0, 0.5)',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        J.A.R.V.I.S\r\n      </div>\r\n\r\n      {/* Glassy Blob */}\r\n      <div style={{ marginBottom: '30px' }}>\r\n        <GlassyBlob\r\n          mode={mode}\r\n          intensity={intensity}\r\n          size={450}\r\n        />\r\n      </div>\r\n\r\n      {/* Status Display */}\r\n      <div style={{\r\n        color: '#FFD700',\r\n        fontSize: '18px',\r\n        marginBottom: '20px',\r\n        textAlign: 'center',\r\n        minHeight: '25px'\r\n      }}>\r\n        Status: {mode.charAt(0).toUpperCase() + mode.slice(1)}\r\n        {mode === 'listening' && ` (${Math.round(audioLevel * 100)}%)`}\r\n      </div>\r\n\r\n      {/* Text Input Area */}\r\n      <div style={{\r\n        width: '100%',\r\n        maxWidth: '600px',\r\n        marginBottom: '20px'\r\n      }}>\r\n        <div style={{\r\n          display: 'flex',\r\n          gap: '10px',\r\n          marginBottom: '10px'\r\n        }}>\r\n          <input\r\n            type=\"text\"\r\n            value={userText}\r\n            onChange={(e) => setUserText(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && sendTextMessage()}\r\n            placeholder=\"Type your message to Jarvis...\"\r\n            style={{\r\n              flex: 1,\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #FFD700',\r\n              borderRadius: '25px',\r\n              background: 'rgba(0, 0, 0, 0.8)',\r\n              color: 'white',\r\n              outline: 'none'\r\n            }}\r\n          />\r\n          <button\r\n            onClick={sendTextMessage}\r\n            disabled={!userText.trim() || !isConnected}\r\n            style={{\r\n              padding: '12px 24px',\r\n              fontSize: '16px',\r\n              background: isConnected && userText.trim() ? '#FFD700' : '#666',\r\n              color: 'black',\r\n              border: 'none',\r\n              borderRadius: '25px',\r\n              cursor: isConnected && userText.trim() ? 'pointer' : 'not-allowed',\r\n              fontWeight: 'bold'\r\n            }}\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n\r\n        {/* Control Buttons */}\r\n        <div style={{ display: 'flex', gap: '10px', justifyContent: 'center' }}>\r\n          <button\r\n            onClick={toggleMicrophone}\r\n            style={{\r\n              padding: '10px 20px',\r\n              background: micEnabled ? '#4CAF50' : '#666',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '20px',\r\n              cursor: 'pointer',\r\n              fontWeight: 'bold'\r\n            }}\r\n          >\r\n            🎤 {micEnabled ? 'Mic ON' : 'Mic OFF'}\r\n          </button>\r\n          \r\n          <button\r\n            onClick={clearConversation}\r\n            style={{\r\n              padding: '10px 20px',\r\n              background: '#FF5722',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '20px',\r\n              cursor: 'pointer',\r\n              fontWeight: 'bold'\r\n            }}\r\n          >\r\n            Clear History\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Current Response Display */}\r\n      {currentResponse && (\r\n        <div style={{\r\n          width: '100%',\r\n          maxWidth: '600px',\r\n          padding: '15px',\r\n          background: 'rgba(255, 215, 0, 0.1)',\r\n          border: '1px solid #FFD700',\r\n          borderRadius: '10px',\r\n          color: 'white',\r\n          marginBottom: '20px'\r\n        }}>\r\n          <strong>Jarvis:</strong> {currentResponse}\r\n          <span style={{ animation: 'blink 1s infinite' }}>|</span>\r\n        </div>\r\n      )}\r\n\r\n      {/* Conversation History */}\r\n      <div style={{\r\n        width: '100%',\r\n        maxWidth: '600px',\r\n        maxHeight: '300px',\r\n        overflowY: 'auto',\r\n        padding: '10px',\r\n        background: 'rgba(255, 255, 255, 0.05)',\r\n        borderRadius: '10px',\r\n        border: '1px solid #333'\r\n      }}>\r\n        <h3 style={{ color: '#FFD700', marginTop: 0 }}>Conversation History</h3>\r\n        {conversationHistory.length === 0 ? (\r\n          <p style={{ color: '#666', fontStyle: 'italic' }}>No conversation yet...</p>\r\n        ) : (\r\n          conversationHistory.map((message, index) => (\r\n            <div key={index} style={{\r\n              marginBottom: '15px',\r\n              padding: '10px',\r\n              borderRadius: '5px',\r\n              background: message.role === 'user' ? 'rgba(100, 150, 255, 0.1)' : 'rgba(255, 215, 0, 0.1)',\r\n              border: `1px solid ${message.role === 'user' ? '#6496FF' : '#FFD700'}`\r\n            }}>\r\n              <div style={{\r\n                fontSize: '12px',\r\n                color: '#888',\r\n                marginBottom: '5px'\r\n              }}>\r\n                {message.role === 'user' ? '👤 You' : '🤖 Jarvis'} - {message.timestamp}\r\n              </div>\r\n              <div style={{ color: 'white' }}>\r\n                {message.text}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {/* Add blinking cursor animation */}\r\n      <style>\r\n        {`\r\n          @keyframes blink {\r\n            0%, 50% { opacity: 1; }\r\n            51%, 100% { opacity: 0; }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JarvisInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}