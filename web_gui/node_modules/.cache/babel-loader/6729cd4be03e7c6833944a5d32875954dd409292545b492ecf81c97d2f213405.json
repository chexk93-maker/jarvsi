{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback,useMemo,memo}from'react';import GlassyBlob from'./GlassyBlob';import{useAudioAnalyzer}from'./AudioAnalyzer';import ChatPanel from'./ChatPanel';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MemoizedGlassyBlob=/*#__PURE__*/memo(GlassyBlob);const MemoizedChatPanel=/*#__PURE__*/memo(ChatPanel);const JarvisInterface=()=>{const[mode,setMode]=useState('idle');const[intensity,setIntensity]=useState(0.5);const[userText,setUserText]=useState('');const[assistantText,setAssistantText]=useState('');const[isConnected,setIsConnected]=useState(false);const[conversationHistory,setConversationHistory]=useState([]);const[currentResponse,setCurrentResponse]=useState('');const[micEnabled,setMicEnabled]=useState(true);const[isWaitingForResponse,setIsWaitingForResponse]=useState(false);const wsRef=useRef(null);const responseRef=useRef('');const lastTextInputRef=useRef(null);const reconnectTimeoutRef=useRef(null);const isConnectingRef=useRef(false);// Helper function to safely send WebSocket messages\nconst sendWebSocketMessage=useCallback(message=>{if(wsRef.current&&wsRef.current.readyState===WebSocket.OPEN){wsRef.current.send(JSON.stringify(message));return true;}console.warn('WebSocket not ready. Message not sent:',message);return false;},[]);// Audio analyzer for real-time audio level monitoring\nconst{startListening,stopListening,isListening,audioLevel}=useAudioAnalyzer(level=>{if(mode==='listening'||mode==='idle'){setIntensity(prevIntensity=>{const newIntensity=Math.max(0.1,level*1.5);// Only update if the change is significant\nif(Math.abs(newIntensity-prevIntensity)>0.01){return newIntensity;}return prevIntensity;});}});const addToConversation=useCallback((role,text)=>{const messageId=\"\".concat(role,\"-\").concat(text,\"-\").concat(Date.now());lastTextInputRef.current={text,timestamp:Date.now()};setConversationHistory(prev=>[...prev,{role,text,timestamp:new Date().toLocaleTimeString(),id:messageId}]);},[]);const handleJarvisMessage=useCallback(data=>{switch(data.type){case'user_text':if(lastTextInputRef.current&&lastTextInputRef.current.text===data.text&&Date.now()-lastTextInputRef.current.timestamp<2000){// Duplicate, do nothing\n}else{addToConversation('user',data.text);}setIsWaitingForResponse(true);break;case'assistant_stream':setIsWaitingForResponse(false);responseRef.current+=data.text;setCurrentResponse(responseRef.current);break;case'assistant_final':setAssistantText(data.text);addToConversation('assistant',data.text);responseRef.current='';setCurrentResponse('');setIsWaitingForResponse(false);setMode('idle');setIntensity(0.5);break;case'mode_change':setMode(data.mode);if(data.mode==='listening'){setIntensity(0.3);if(micEnabled)startListening();}else if(data.mode==='speaking'){setIntensity(data.intensity||0.8);stopListening();}else if(data.mode==='idle'){setIntensity(0.5);if(micEnabled)startListening();}else{setIntensity(0.5);stopListening();}break;case'audio_level':if(data.mode==='speaking'){setIntensity(Math.max(0.3,data.level*1.2));}break;default:console.log('Unknown message type:',data.type);}},[addToConversation,micEnabled,startListening,stopListening]);const connectToJarvis=useCallback(()=>{// Clear any existing reconnection timeout\nif(reconnectTimeoutRef.current){clearTimeout(reconnectTimeoutRef.current.timeout);reconnectTimeoutRef.current=null;}// Prevent multiple simultaneous connection attempts\nif(isConnectingRef.current||wsRef.current&&wsRef.current.readyState===WebSocket.CONNECTING){console.log('Connection attempt already in progress');return;}// Check if we're already connected\nif(wsRef.current&&wsRef.current.readyState===WebSocket.OPEN){console.log('Already connected to Jarvis backend');setIsConnected(true);return;}// Limit reconnection attempts to prevent infinite loops\nconst maxReconnectAttempts=20;if(reconnectTimeoutRef.current&&reconnectTimeoutRef.current.attempt>=maxReconnectAttempts){console.error(\"Maximum reconnection attempts (\".concat(maxReconnectAttempts,\") reached. Stopping reconnection.\"));return;}try{isConnectingRef.current=true;console.log('Attempting to connect to Jarvis backend...');wsRef.current=new WebSocket('ws://localhost:8765');wsRef.current.onopen=()=>{isConnectingRef.current=false;console.log('Connected to Jarvis backend');setIsConnected(true);// Reset reconnection attempt counter on successful connection\nreconnectTimeoutRef.current={attempt:0};// Use the helper function to send message\n// Add a small delay before sending the enable_mic message to ensure connection is stable\nsetTimeout(()=>{sendWebSocketMessage({type:'enable_mic'});},100);};wsRef.current.onmessage=event=>handleJarvisMessage(JSON.parse(event.data));wsRef.current.onclose=event=>{isConnectingRef.current=false;console.log('Disconnected from Jarvis backend',event);setIsConnected(false);// Check if it was a clean close or an error\nif(event.wasClean){console.log('Connection closed cleanly');}else{console.log('Connection closed unexpectedly');}console.log('Close code:',event.code);console.log('Close reason:',event.reason);// Only attempt reconnection if not explicitly closed by the component\nif(!event.wasClean){var _reconnectTimeoutRef$,_reconnectTimeoutRef$2;console.log('Unclean disconnect, scheduling reconnection...');// More conservative exponential backoff: start with 5 seconds, max 60 seconds\n// This will reduce the rapid connect/disconnect cycles\nconst reconnectDelay=Math.min(5000*Math.pow(1.5,((_reconnectTimeoutRef$=reconnectTimeoutRef.current)===null||_reconnectTimeoutRef$===void 0?void 0:_reconnectTimeoutRef$.attempt)||0),60000);reconnectTimeoutRef.current={attempt:(((_reconnectTimeoutRef$2=reconnectTimeoutRef.current)===null||_reconnectTimeoutRef$2===void 0?void 0:_reconnectTimeoutRef$2.attempt)||0)+1,timeout:setTimeout(connectToJarvis,reconnectDelay)};console.log(\"Reconnection scheduled in \".concat(reconnectDelay,\"ms (attempt \").concat(reconnectTimeoutRef.current.attempt,\")\"));}};wsRef.current.onerror=error=>{var _wsRef$current,_wsRef$current2,_wsRef$current3,_wsRef$current4;isConnectingRef.current=false;console.error('WebSocket error:',error);console.error('WebSocket readyState:',(_wsRef$current=wsRef.current)===null||_wsRef$current===void 0?void 0:_wsRef$current.readyState);console.error('WebSocket URL:',(_wsRef$current2=wsRef.current)===null||_wsRef$current2===void 0?void 0:_wsRef$current2.url);// More descriptive error messages\nif(((_wsRef$current3=wsRef.current)===null||_wsRef$current3===void 0?void 0:_wsRef$current3.readyState)===WebSocket.CLOSED){console.error('WebSocket connection failed - server may be down or port unavailable');}else if(((_wsRef$current4=wsRef.current)===null||_wsRef$current4===void 0?void 0:_wsRef$current4.readyState)===WebSocket.CONNECTING){console.error('WebSocket connection failed during handshake');}setIsConnected(false);// Don't immediately reconnect on error - let the onclose handler deal with reconnection\n// This prevents double reconnection attempts\n};}catch(error){isConnectingRef.current=false;console.error('Failed to connect to Jarvis:',error);setIsConnected(false);// Schedule reconnection with exponential backoff, but limit attempts\nif(!reconnectTimeoutRef.current||reconnectTimeoutRef.current.attempt<maxReconnectAttempts){var _reconnectTimeoutRef$3,_reconnectTimeoutRef$4;const reconnectDelay=Math.min(5000*Math.pow(1.5,((_reconnectTimeoutRef$3=reconnectTimeoutRef.current)===null||_reconnectTimeoutRef$3===void 0?void 0:_reconnectTimeoutRef$3.attempt)||0),60000);reconnectTimeoutRef.current={attempt:(((_reconnectTimeoutRef$4=reconnectTimeoutRef.current)===null||_reconnectTimeoutRef$4===void 0?void 0:_reconnectTimeoutRef$4.attempt)||0)+1,timeout:setTimeout(connectToJarvis,reconnectDelay)};console.log(\"Reconnection scheduled in \".concat(reconnectDelay,\"ms due to error (attempt \").concat(reconnectTimeoutRef.current.attempt,\")\"));}else{console.error(\"Maximum reconnection attempts (\".concat(maxReconnectAttempts,\") reached. Stopping reconnection.\"));}}},[handleJarvisMessage,sendWebSocketMessage]);useEffect(()=>{connectToJarvis();return()=>{// Clear reconnection timeout\nif(reconnectTimeoutRef.current){clearTimeout(reconnectTimeoutRef.current.timeout);reconnectTimeoutRef.current=null;}// Close WebSocket connection cleanly\nif(wsRef.current){try{wsRef.current.onclose=null;// Remove onclose handler to prevent reconnection\nwsRef.current.close(1000,'Component unmounted');}catch(e){console.log('Error closing WebSocket:',e);}wsRef.current=null;}stopListening();isConnectingRef.current=false;};},[connectToJarvis,stopListening]);const sendTextMessage=useCallback(()=>{if(userText.trim()&&isConnected){const message=userText.trim();addToConversation('user',message);setIsWaitingForResponse(true);// Use the helper function to send message\nsendWebSocketMessage({type:'text_input',text:message});setUserText('');}},[userText,isConnected,addToConversation,sendWebSocketMessage]);const toggleMicrophone=useCallback(async()=>{if(!micEnabled){try{await startListening();setMicEnabled(true);// Use the helper function to send message\nsendWebSocketMessage({type:'enable_mic'});}catch(error){console.error('Failed to enable microphone:',error);}}else{stopListening();setMicEnabled(false);// Use the helper function to send message\nsendWebSocketMessage({type:'disable_mic'});}},[micEnabled,startListening,stopListening,sendWebSocketMessage]);const clearConversation=useCallback(()=>{setConversationHistory([]);setCurrentResponse('');responseRef.current='';},[]);const[isChatOpen,setIsChatOpen]=useState(false);const containerStyle=useMemo(()=>({minHeight:'100vh',background:'linear-gradient(135deg, #000000 0%, #0a0a0a 100%)',display:'flex',alignItems:'center',justifyContent:'center',fontFamily:'Inter, system-ui, sans-serif',position:'relative',overflow:'hidden'}),[]);const connectionStatusStyle=useMemo(()=>({position:'absolute',top:'20px',left:'20px',color:isConnected?'#00ff88':'#ff4757',fontSize:'12px',fontWeight:'500',display:'flex',alignItems:'center',gap:'8px',padding:'8px 12px',background:'rgba(0, 0, 0, 0.3)',borderRadius:'20px',backdropFilter:'blur(10px)'}),[isConnected]);const connectionIndicatorStyle=useMemo(()=>({width:'8px',height:'8px',borderRadius:'50%',background:isConnected?'#00ff88':'#ff4757',boxShadow:\"0 0 10px \".concat(isConnected?'#00ff88':'#ff4757')}),[isConnected]);const chatButtonStyle=useMemo(()=>({position:'fixed',bottom:'40px',right:'40px',width:'50px',height:'50px',borderRadius:'50%',background:'rgba(64, 158, 255, 0.2)',border:'1px solid rgba(64, 158, 255, 0.4)',cursor:'pointer',display:isChatOpen?'none':'flex',alignItems:'center',justifyContent:'center',backdropFilter:'blur(10px)',transition:'all 0.3s ease',zIndex:1000,boxShadow:'0 0 20px rgba(64, 158, 255, 0.3)'}),[isChatOpen]);const micButtonStyle=useMemo(()=>({position:'fixed',bottom:'35px',left:'calc(50vw - 30px)',width:'60px',height:'60px',borderRadius:'50%',background:micEnabled?'linear-gradient(135deg, #00ff88, #00d4aa)':'rgba(36, 58, 82, 0.8)',border:micEnabled?'2px solid rgba(0, 255, 136, 0.4)':'2px solid rgba(255, 255, 255, 0.2)',cursor:'pointer',display:'flex',alignItems:'center',justifyContent:'center',backdropFilter:'blur(10px)',transition:'all 0.3s ease',boxShadow:micEnabled?'0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)':'0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)',zIndex:1000}),[micEnabled]);return/*#__PURE__*/_jsxs(\"div\",{style:containerStyle,children:[/*#__PURE__*/_jsxs(\"div\",{style:connectionStatusStyle,children:[/*#__PURE__*/_jsx(\"div\",{style:connectionIndicatorStyle}),isConnected?'Connected':'Disconnected',!isConnected&&/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'8px',fontStyle:'italic'},children:\"(Retrying...)\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsChatOpen(!isChatOpen),title:\"Toggle Chat Panel\",style:chatButtonStyle,onMouseOver:e=>{const button=e.currentTarget;button.style.transform='scale(1.1)';button.style.background='rgba(64, 158, 255, 0.3)';button.style.boxShadow='0 0 30px rgba(64, 158, 255, 0.5)';},onMouseOut:e=>{const button=e.currentTarget;button.style.transform='scale(1)';button.style.background='rgba(64, 158, 255, 0.2)';button.style.boxShadow='0 0 20px rgba(64, 158, 255, 0.3)';},children:/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2ZM20 16H6L4 18V4H20V16Z\",fill:\"#409EFF\"})})}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleMicrophone,title:micEnabled?\"Disable Microphone\":\"Enable Microphone\",style:micButtonStyle,onMouseOver:e=>{const button=e.currentTarget;button.style.transform='scale(1.1)';if(micEnabled){button.style.boxShadow='0 0 40px rgba(0, 255, 136, 0.6), 0 4px 20px rgba(0, 0, 0, 0.4)';}else{button.style.boxShadow='0 0 30px rgba(36, 58, 82, 0.7), 0 4px 20px rgba(0, 0, 0, 0.4)';}},onMouseOut:e=>{const button=e.currentTarget;button.style.transform='scale(1)';if(micEnabled){button.style.boxShadow='0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)';}else{button.style.boxShadow='0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)';}},children:/*#__PURE__*/_jsxs(\"div\",{style:{width:'36px',height:'36px',display:'flex',alignItems:'center',justifyContent:'center',position:'relative'},children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"32\",height:\"32\",viewBox:\"0 0 24 24\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",className:\"mic-icon\",children:[/*#__PURE__*/_jsx(\"g\",{className:\"mic-body\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M12 15C13.6569 15 15 13.6569 15 12V6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6V12C9 13.6569 10.3431 15 12 15Z\",fill:\"white\"})}),/*#__PURE__*/_jsx(\"g\",{className:\"mic-stand\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12H5C5 15.866 7.93452 19 11.5 19V22H12.5V19C16.0655 19 19 15.866 19 12H17Z\",fill:\"white\"})})]}),micEnabled&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',right:'-6px',top:'50%',transform:'translateY(-50%)',width:'4px',height:'4px',border:'1px solid rgba(0, 255, 136, 0.6)',borderRadius:'50%',animation:'soundwave 2s ease-out infinite'}}),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',right:'-10px',top:'50%',transform:'translateY(-50%)',width:'6px',height:'6px',border:'1px solid rgba(0, 255, 136, 0.4)',borderRadius:'50%',animation:'soundwave 2s ease-out 0.3s infinite'}})]})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',zIndex:1},children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'30px',filter:'drop-shadow(0 0 50px rgba(255, 215, 0, 0.3))'},children:/*#__PURE__*/_jsx(MemoizedGlassyBlob,{mode:mode,intensity:intensity,size:500})}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'rgba(255, 255, 255, 0.7)',fontSize:'14px',fontWeight:'400',textAlign:'center',textTransform:'uppercase',letterSpacing:'2px',opacity:0.8},children:[mode==='idle'&&'Ready',mode==='listening'&&\"Listening \".concat(Math.round(audioLevel*100),\"%\"),mode==='thinking'&&'Processing...',mode==='speaking'&&'Speaking']})]}),/*#__PURE__*/_jsx(MemoizedChatPanel,{isOpen:isChatOpen,conversationHistory:conversationHistory,currentResponse:currentResponse,isWaitingForResponse:isWaitingForResponse,onSendMessage:sendTextMessage,userText:userText,setUserText:setUserText,isConnected:isConnected,onClearHistory:clearConversation,onClose:()=>setIsChatOpen(false)}),/*#__PURE__*/_jsx(\"style\",{children:\"\\n          @keyframes blink {\\n            0%, 50% { opacity: 1; }\\n            51%, 100% { opacity: 0; }\\n          }\\n          \\n          @keyframes slideIn {\\n            from { transform: translateX(100%); }\\n            to { transform: translateX(0); }\\n          }\\n          \\n          @keyframes slideOut {\\n            from { transform: translateX(0); }\\n            to { transform: translateX(100%); }\\n          }\\n          \\n          * {\\n            box-sizing: border-box;\\n          }\\n          \\n          ::-webkit-scrollbar {\\n            width: 6px;\\n          }\\n          \\n          ::-webkit-scrollbar-track {\\n            background: rgba(255, 255, 255, 0.05);\\n            border-radius: 3px;\\n          }\\n          \\n          ::-webkit-scrollbar-thumb {\\n            background: rgba(255, 255, 255, 0.2);\\n            border-radius: 3px;\\n          }\\n          \\n          ::-webkit-scrollbar-thumb:hover {\\n            background: rgba(255, 255, 255, 0.3);\\n          }\\n          \\n          @keyframes pulse {\\n            from { \\n              opacity: 0.6;\\n              transform: translateX(-50%) scaleY(0.8);\\n            }\\n            to { \\n              opacity: 1;\\n              transform: translateX(-50%) scaleY(1.2);\\n            }\\n          }\\n          \\n          @keyframes soundwave {\\n            0% {\\n              transform: translateY(-50%) scale(0);\\n              opacity: 1;\\n            }\\n            50% {\\n              opacity: 0.5;\\n            }\\n            100% {\\n              transform: translateY(-50%) scale(2);\\n              opacity: 0;\\n            }\\n          }\\n        \"})]});};export default JarvisInterface;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","memo","GlassyBlob","useAudioAnalyzer","ChatPanel","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MemoizedGlassyBlob","MemoizedChatPanel","JarvisInterface","mode","setMode","intensity","setIntensity","userText","setUserText","assistantText","setAssistantText","isConnected","setIsConnected","conversationHistory","setConversationHistory","currentResponse","setCurrentResponse","micEnabled","setMicEnabled","isWaitingForResponse","setIsWaitingForResponse","wsRef","responseRef","lastTextInputRef","reconnectTimeoutRef","isConnectingRef","sendWebSocketMessage","message","current","readyState","WebSocket","OPEN","send","JSON","stringify","console","warn","startListening","stopListening","isListening","audioLevel","level","prevIntensity","newIntensity","Math","max","abs","addToConversation","role","text","messageId","concat","Date","now","timestamp","prev","toLocaleTimeString","id","handleJarvisMessage","data","type","log","connectToJarvis","clearTimeout","timeout","CONNECTING","maxReconnectAttempts","attempt","error","onopen","setTimeout","onmessage","event","parse","onclose","wasClean","code","reason","_reconnectTimeoutRef$","_reconnectTimeoutRef$2","reconnectDelay","min","pow","onerror","_wsRef$current","_wsRef$current2","_wsRef$current3","_wsRef$current4","url","CLOSED","_reconnectTimeoutRef$3","_reconnectTimeoutRef$4","close","e","sendTextMessage","trim","toggleMicrophone","clearConversation","isChatOpen","setIsChatOpen","containerStyle","minHeight","background","display","alignItems","justifyContent","fontFamily","position","overflow","connectionStatusStyle","top","left","color","fontSize","fontWeight","gap","padding","borderRadius","backdropFilter","connectionIndicatorStyle","width","height","boxShadow","chatButtonStyle","bottom","right","border","cursor","transition","zIndex","micButtonStyle","style","children","marginLeft","fontStyle","onClick","title","onMouseOver","button","currentTarget","transform","onMouseOut","viewBox","fill","xmlns","d","className","animation","flexDirection","marginBottom","filter","size","textAlign","textTransform","letterSpacing","opacity","round","isOpen","onSendMessage","onClearHistory","onClose"],"sources":["C:/Users/Krish/jarvis/web_gui/src/components/JarvisInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo, memo } from 'react';\nimport GlassyBlob from './GlassyBlob';\nimport { useAudioAnalyzer } from './AudioAnalyzer';\nimport ChatPanel from './ChatPanel';\n\nconst MemoizedGlassyBlob = memo(GlassyBlob);\nconst MemoizedChatPanel = memo(ChatPanel);\n\nconst JarvisInterface = () => {\n  const [mode, setMode] = useState('idle');\n  const [intensity, setIntensity] = useState(0.5);\n  const [userText, setUserText] = useState('');\n  const [assistantText, setAssistantText] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const [micEnabled, setMicEnabled] = useState(true);\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\n\n  const wsRef = useRef(null);\n  const responseRef = useRef('');\n  const lastTextInputRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n\n  // Helper function to safely send WebSocket messages\n  const sendWebSocketMessage = useCallback((message) => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(message));\n      return true;\n    }\n    console.warn('WebSocket not ready. Message not sent:', message);\n    return false;\n  }, []);\n\n  // Audio analyzer for real-time audio level monitoring\n  const { startListening, stopListening, isListening, audioLevel } = useAudioAnalyzer(\n    (level) => {\n      if (mode === 'listening' || mode === 'idle') {\n        setIntensity(prevIntensity => {\n          const newIntensity = Math.max(0.1, level * 1.5);\n          // Only update if the change is significant\n          if (Math.abs(newIntensity - prevIntensity) > 0.01) {\n            return newIntensity;\n          }\n          return prevIntensity;\n        });\n      }\n    }\n  );\n\n  const addToConversation = useCallback((role, text) => {\n    const messageId = `${role}-${text}-${Date.now()}`;\n    lastTextInputRef.current = { text, timestamp: Date.now() };\n    setConversationHistory(prev => [...prev, { role, text, timestamp: new Date().toLocaleTimeString(), id: messageId }]);\n  }, []);\n\n  const handleJarvisMessage = useCallback((data) => {\n    switch (data.type) {\n      case 'user_text':\n        if (lastTextInputRef.current && lastTextInputRef.current.text === data.text && (Date.now() - lastTextInputRef.current.timestamp) < 2000) {\n          // Duplicate, do nothing\n        } else {\n          addToConversation('user', data.text);\n        }\n        setIsWaitingForResponse(true);\n        break;\n      case 'assistant_stream':\n        setIsWaitingForResponse(false);\n        responseRef.current += data.text;\n        setCurrentResponse(responseRef.current);\n        break;\n      case 'assistant_final':\n        setAssistantText(data.text);\n        addToConversation('assistant', data.text);\n        responseRef.current = '';\n        setCurrentResponse('');\n        setIsWaitingForResponse(false);\n        setMode('idle');\n        setIntensity(0.5);\n        break;\n      case 'mode_change':\n        setMode(data.mode);\n        if (data.mode === 'listening') {\n          setIntensity(0.3);\n          if (micEnabled) startListening();\n        } else if (data.mode === 'speaking') {\n          setIntensity(data.intensity || 0.8);\n          stopListening();\n        } else if (data.mode === 'idle') {\n          setIntensity(0.5);\n          if (micEnabled) startListening();\n        } else {\n          setIntensity(0.5);\n          stopListening();\n        }\n        break;\n      case 'audio_level':\n        if (data.mode === 'speaking') {\n          setIntensity(Math.max(0.3, data.level * 1.2));\n        }\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  }, [addToConversation, micEnabled, startListening, stopListening]);\n\n  const connectToJarvis = useCallback(() => {\n    // Clear any existing reconnection timeout\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current.timeout);\n      reconnectTimeoutRef.current = null;\n    }\n\n    // Prevent multiple simultaneous connection attempts\n    if (isConnectingRef.current || (wsRef.current && wsRef.current.readyState === WebSocket.CONNECTING)) {\n      console.log('Connection attempt already in progress');\n      return;\n    }\n\n    // Check if we're already connected\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      console.log('Already connected to Jarvis backend');\n      setIsConnected(true);\n      return;\n    }\n\n    // Limit reconnection attempts to prevent infinite loops\n    const maxReconnectAttempts = 20;\n    if (reconnectTimeoutRef.current && reconnectTimeoutRef.current.attempt >= maxReconnectAttempts) {\n      console.error(`Maximum reconnection attempts (${maxReconnectAttempts}) reached. Stopping reconnection.`);\n      return;\n    }\n\n    try {\n      isConnectingRef.current = true;\n      console.log('Attempting to connect to Jarvis backend...');\n      wsRef.current = new WebSocket('ws://localhost:8765');\n      \n      wsRef.current.onopen = () => {\n        isConnectingRef.current = false;\n        console.log('Connected to Jarvis backend');\n        setIsConnected(true);\n        // Reset reconnection attempt counter on successful connection\n        reconnectTimeoutRef.current = { attempt: 0 };\n        // Use the helper function to send message\n        // Add a small delay before sending the enable_mic message to ensure connection is stable\n        setTimeout(() => {\n          sendWebSocketMessage({ type: 'enable_mic' });\n        }, 100);\n      };\n      wsRef.current.onmessage = (event) => handleJarvisMessage(JSON.parse(event.data));\n      wsRef.current.onclose = (event) => {\n        isConnectingRef.current = false;\n        console.log('Disconnected from Jarvis backend', event);\n        setIsConnected(false);\n        \n        // Check if it was a clean close or an error\n        if (event.wasClean) {\n          console.log('Connection closed cleanly');\n        } else {\n          console.log('Connection closed unexpectedly');\n        }\n        console.log('Close code:', event.code);\n        console.log('Close reason:', event.reason);\n        \n        // Only attempt reconnection if not explicitly closed by the component\n        if (!event.wasClean) {\n          console.log('Unclean disconnect, scheduling reconnection...');\n          // More conservative exponential backoff: start with 5 seconds, max 60 seconds\n          // This will reduce the rapid connect/disconnect cycles\n          const reconnectDelay = Math.min(5000 * Math.pow(1.5, (reconnectTimeoutRef.current?.attempt || 0)), 60000);\n          reconnectTimeoutRef.current = { \n            attempt: (reconnectTimeoutRef.current?.attempt || 0) + 1,\n            timeout: setTimeout(connectToJarvis, reconnectDelay)\n          };\n          console.log(`Reconnection scheduled in ${reconnectDelay}ms (attempt ${reconnectTimeoutRef.current.attempt})`);\n        }\n      };\n      wsRef.current.onerror = (error) => {\n        isConnectingRef.current = false;\n        console.error('WebSocket error:', error);\n        console.error('WebSocket readyState:', wsRef.current?.readyState);\n        console.error('WebSocket URL:', wsRef.current?.url);\n        \n        // More descriptive error messages\n        if (wsRef.current?.readyState === WebSocket.CLOSED) {\n          console.error('WebSocket connection failed - server may be down or port unavailable');\n        } else if (wsRef.current?.readyState === WebSocket.CONNECTING) {\n          console.error('WebSocket connection failed during handshake');\n        }\n        \n        setIsConnected(false);\n        // Don't immediately reconnect on error - let the onclose handler deal with reconnection\n        // This prevents double reconnection attempts\n      };\n    } catch (error) {\n      isConnectingRef.current = false;\n      console.error('Failed to connect to Jarvis:', error);\n      setIsConnected(false);\n      \n      // Schedule reconnection with exponential backoff, but limit attempts\n      if (!reconnectTimeoutRef.current || reconnectTimeoutRef.current.attempt < maxReconnectAttempts) {\n        const reconnectDelay = Math.min(5000 * Math.pow(1.5, (reconnectTimeoutRef.current?.attempt || 0)), 60000);\n        reconnectTimeoutRef.current = { \n          attempt: (reconnectTimeoutRef.current?.attempt || 0) + 1,\n          timeout: setTimeout(connectToJarvis, reconnectDelay)\n        };\n        console.log(`Reconnection scheduled in ${reconnectDelay}ms due to error (attempt ${reconnectTimeoutRef.current.attempt})`);\n      } else {\n        console.error(`Maximum reconnection attempts (${maxReconnectAttempts}) reached. Stopping reconnection.`);\n      }\n    }\n  }, [handleJarvisMessage, sendWebSocketMessage]);\n\n  useEffect(() => {\n    connectToJarvis();\n    return () => {\n      // Clear reconnection timeout\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current.timeout);\n        reconnectTimeoutRef.current = null;\n      }\n      \n      // Close WebSocket connection cleanly\n      if (wsRef.current) {\n        try {\n          wsRef.current.onclose = null; // Remove onclose handler to prevent reconnection\n          wsRef.current.close(1000, 'Component unmounted');\n        } catch (e) {\n          console.log('Error closing WebSocket:', e);\n        }\n        wsRef.current = null;\n      }\n      \n      stopListening();\n      isConnectingRef.current = false;\n    };\n  }, [connectToJarvis, stopListening]);\n\n  const sendTextMessage = useCallback(() => {\n    if (userText.trim() && isConnected) {\n      const message = userText.trim();\n      addToConversation('user', message);\n      setIsWaitingForResponse(true);\n      // Use the helper function to send message\n      sendWebSocketMessage({ type: 'text_input', text: message });\n      setUserText('');\n    }\n  }, [userText, isConnected, addToConversation, sendWebSocketMessage]);\n\n  const toggleMicrophone = useCallback(async () => {\n    if (!micEnabled) {\n      try {\n        await startListening();\n        setMicEnabled(true);\n        // Use the helper function to send message\n        sendWebSocketMessage({ type: 'enable_mic' });\n      } catch (error) {\n        console.error('Failed to enable microphone:', error);\n      }\n    } else {\n      stopListening();\n      setMicEnabled(false);\n      // Use the helper function to send message\n      sendWebSocketMessage({ type: 'disable_mic' });\n    }\n  }, [micEnabled, startListening, stopListening, sendWebSocketMessage]);\n\n  const clearConversation = useCallback(() => {\n    setConversationHistory([]);\n    setCurrentResponse('');\n    responseRef.current = '';\n  }, []);\n\n  const [isChatOpen, setIsChatOpen] = useState(false);\n\n  const containerStyle = useMemo(() => ({\n    minHeight: '100vh',\n    background: 'linear-gradient(135deg, #000000 0%, #0a0a0a 100%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Inter, system-ui, sans-serif',\n    position: 'relative',\n    overflow: 'hidden'\n  }), []);\n\n  const connectionStatusStyle = useMemo(() => ({\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: isConnected ? '#00ff88' : '#ff4757',\n    fontSize: '12px',\n    fontWeight: '500',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '8px',\n    padding: '8px 12px',\n    background: 'rgba(0, 0, 0, 0.3)',\n    borderRadius: '20px',\n    backdropFilter: 'blur(10px)'\n  }), [isConnected]);\n\n  const connectionIndicatorStyle = useMemo(() => ({\n    width: '8px',\n    height: '8px',\n    borderRadius: '50%',\n    background: isConnected ? '#00ff88' : '#ff4757',\n    boxShadow: `0 0 10px ${isConnected ? '#00ff88' : '#ff4757'}`\n  }), [isConnected]);\n\n  const chatButtonStyle = useMemo(() => ({\n    position: 'fixed',\n    bottom: '40px',\n    right: '40px',\n    width: '50px',\n    height: '50px',\n    borderRadius: '50%',\n    background: 'rgba(64, 158, 255, 0.2)',\n    border: '1px solid rgba(64, 158, 255, 0.4)',\n    cursor: 'pointer',\n    display: isChatOpen ? 'none' : 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    zIndex: 1000,\n    boxShadow: '0 0 20px rgba(64, 158, 255, 0.3)'\n  }), [isChatOpen]);\n\n  const micButtonStyle = useMemo(() => ({\n    position: 'fixed',\n    bottom: '35px',\n    left: 'calc(50vw - 30px)',\n    width: '60px',\n    height: '60px',\n    borderRadius: '50%',\n    background: micEnabled\n      ? 'linear-gradient(135deg, #00ff88, #00d4aa)'\n      : 'rgba(36, 58, 82, 0.8)',\n    border: micEnabled\n      ? '2px solid rgba(0, 255, 136, 0.4)'\n      : '2px solid rgba(255, 255, 255, 0.2)',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    boxShadow: micEnabled\n      ? '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)'\n      : '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)',\n    zIndex: 1000\n  }), [micEnabled]);\n\n  return (\n    <div style={containerStyle}>\n      <div style={connectionStatusStyle}>\n        <div style={connectionIndicatorStyle}></div>\n        {isConnected ? 'Connected' : 'Disconnected'}\n        {!isConnected && (\n          <span style={{ marginLeft: '8px', fontStyle: 'italic' }}>\n            (Retrying...)\n          </span>\n        )}\n      </div>\n\n      <button\n        onClick={() => setIsChatOpen(!isChatOpen)}\n        title=\"Toggle Chat Panel\"\n        style={chatButtonStyle}\n        onMouseOver={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1.1)';\n          button.style.background = 'rgba(64, 158, 255, 0.3)';\n          button.style.boxShadow = '0 0 30px rgba(64, 158, 255, 0.5)';\n        }}\n        onMouseOut={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1)';\n          button.style.background = 'rgba(64, 158, 255, 0.2)';\n          button.style.boxShadow = '0 0 20px rgba(64, 158, 255, 0.3)';\n        }}\n      >\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2ZM20 16H6L4 18V4H20V16Z\" fill=\"#409EFF\"/>\n        </svg>\n      </button>\n\n      <button\n        onClick={toggleMicrophone}\n        title={micEnabled ? \"Disable Microphone\" : \"Enable Microphone\"}\n        style={micButtonStyle}\n        onMouseOver={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1.1)';\n          if (micEnabled) {\n            button.style.boxShadow = '0 0 40px rgba(0, 255, 136, 0.6), 0 4px 20px rgba(0, 0, 0, 0.4)';\n          } else {\n            button.style.boxShadow = '0 0 30px rgba(36, 58, 82, 0.7), 0 4px 20px rgba(0, 0, 0, 0.4)';\n          }\n        }}\n        onMouseOut={(e) => {\n          const button = e.currentTarget;\n          button.style.transform = 'scale(1)';\n          if (micEnabled) {\n            button.style.boxShadow = '0 0 30px rgba(0, 255, 136, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3)';\n          } else {\n            button.style.boxShadow = '0 0 20px rgba(36, 58, 82, 0.5), 0 4px 15px rgba(0, 0, 0, 0.3)';\n          }\n        }}\n      >\n        <div style={{\n          width: '36px',\n          height: '36px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative'\n        }}>\n          <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mic-icon\">\n            <g className=\"mic-body\">\n              <path d=\"M12 15C13.6569 15 15 13.6569 15 12V6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6V12C9 13.6569 10.3431 15 12 15Z\" fill=\"white\"/>\n            </g>\n            <g className=\"mic-stand\">\n              <path d=\"M17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12H5C5 15.866 7.93452 19 11.5 19V22H12.5V19C16.0655 19 19 15.866 19 12H17Z\" fill=\"white\"/>\n            </g>\n          </svg>\n          {micEnabled && (\n            <>\n              <div style={{\n                position: 'absolute',\n                right: '-6px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                width: '4px',\n                height: '4px',\n                border: '1px solid rgba(0, 255, 136, 0.6)',\n                borderRadius: '50%',\n                animation: 'soundwave 2s ease-out infinite'\n              }} />\n              <div style={{\n                position: 'absolute',\n                right: '-10px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                width: '6px',\n                height: '6px',\n                border: '1px solid rgba(0, 255, 136, 0.4)',\n                borderRadius: '50%',\n                animation: 'soundwave 2s ease-out 0.3s infinite'\n              }} />\n            </>\n          )}\n        </div>\n      </button>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1\n      }}>\n        <div style={{\n          marginBottom: '30px',\n          filter: 'drop-shadow(0 0 50px rgba(255, 215, 0, 0.3))'\n        }}>\n          <MemoizedGlassyBlob\n            mode={mode}\n            intensity={intensity}\n            size={500}\n          />\n        </div>\n\n        <div style={{\n          color: 'rgba(255, 255, 255, 0.7)',\n          fontSize: '14px',\n          fontWeight: '400',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          letterSpacing: '2px',\n          opacity: 0.8\n        }}>\n          {mode === 'idle' && 'Ready'}\n          {mode === 'listening' && `Listening ${Math.round(audioLevel * 100)}%`}\n          {mode === 'thinking' && 'Processing...'}\n          {mode === 'speaking' && 'Speaking'}\n        </div>\n      </div>\n\n      <MemoizedChatPanel\n        isOpen={isChatOpen}\n        conversationHistory={conversationHistory}\n        currentResponse={currentResponse}\n        isWaitingForResponse={isWaitingForResponse}\n        onSendMessage={sendTextMessage}\n        userText={userText}\n        setUserText={setUserText}\n        isConnected={isConnected}\n        onClearHistory={clearConversation}\n        onClose={() => setIsChatOpen(false)}\n      />\n\n      <style>\n        {`\n          @keyframes blink {\n            0%, 50% { opacity: 1; }\n            51%, 100% { opacity: 0; }\n          }\n          \n          @keyframes slideIn {\n            from { transform: translateX(100%); }\n            to { transform: translateX(0); }\n          }\n          \n          @keyframes slideOut {\n            from { transform: translateX(0); }\n            to { transform: translateX(100%); }\n          }\n          \n          * {\n            box-sizing: border-box;\n          }\n          \n          ::-webkit-scrollbar {\n            width: 6px;\n          }\n          \n          ::-webkit-scrollbar-track {\n            background: rgba(255, 255, 255, 0.05);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb {\n            background: rgba(255, 255, 255, 0.2);\n            border-radius: 3px;\n          }\n          \n          ::-webkit-scrollbar-thumb:hover {\n            background: rgba(255, 255, 255, 0.3);\n          }\n          \n          @keyframes pulse {\n            from { \n              opacity: 0.6;\n              transform: translateX(-50%) scaleY(0.8);\n            }\n            to { \n              opacity: 1;\n              transform: translateX(-50%) scaleY(1.2);\n            }\n          }\n          \n          @keyframes soundwave {\n            0% {\n              transform: translateY(-50%) scale(0);\n              opacity: 1;\n            }\n            50% {\n              opacity: 0.5;\n            }\n            100% {\n              transform: translateY(-50%) scale(2);\n              opacity: 0;\n            }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default JarvisInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}